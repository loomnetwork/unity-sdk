// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/plasma_cash.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Loom.Google.Protobuf;
using pbc = global::Loom.Google.Protobuf.Collections;
using pbr = global::Loom.Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Loom.Client.Internal.Protobuf {

  /// <summary>Holder for reflection information generated from proto/plasma_cash.proto</summary>
  internal static partial class PlasmaCashReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/plasma_cash.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlasmaCashReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chdwcm90by9wbGFzbWFfY2FzaC5wcm90bxoQcHJvdG8vbG9vbS5wcm90byKK",
            "AQoLUGxhc21hQmxvY2sSFQoDdWlkGAEgASgLMgguQmlnVUludBIfCgx0cmFu",
            "c2FjdGlvbnMYAiADKAsyCS5QbGFzbWFUeBIRCglzaWduYXR1cmUYAyABKAwS",
            "EwoLbWVya2xlX2hhc2gYBCABKAwSDAoEaGFzaBgFIAEoDBINCgVwcm9vZhgG",
            "IAEoDCLaAQoIUGxhc21hVHgSEAoEc2xvdBgBIAEoBEICMAESIAoOcHJldmlv",
            "dXNfYmxvY2sYAiABKAsyCC5CaWdVSW50Eh4KDGRlbm9taW5hdGlvbhgDIAEo",
            "CzIILkJpZ1VJbnQSGwoJbmV3X293bmVyGAQgASgLMgguQWRkcmVzcxIRCglz",
            "aWduYXR1cmUYBSABKAwSDAoEaGFzaBgGIAEoDBITCgttZXJrbGVfaGFzaBgH",
            "IAEoDBIYCgZzZW5kZXIYCCABKAsyCC5BZGRyZXNzEg0KBXByb29mGAkgASgM",
            "IhgKFkdldEN1cnJlbnRCbG9ja1JlcXVlc3QiOQoXR2V0Q3VycmVudEJsb2Nr",
            "UmVzcG9uc2USHgoMYmxvY2tfaGVpZ2h0GAEgASgLMgguQmlnVUludCIxCg9H",
            "ZXRCbG9ja1JlcXVlc3QSHgoMYmxvY2tfaGVpZ2h0GAEgASgLMgguQmlnVUlu",
            "dCIvChBHZXRCbG9ja1Jlc3BvbnNlEhsKBWJsb2NrGAEgASgLMgwuUGxhc21h",
            "QmxvY2siHQobU3VibWl0QmxvY2tUb01haW5uZXRSZXF1ZXN0IjMKHFN1Ym1p",
            "dEJsb2NrVG9NYWlubmV0UmVzcG9uc2USEwoLbWVya2xlX2hhc2gYASABKAwi",
            "LgoPUGxhc21hVHhSZXF1ZXN0EhsKCHBsYXNtYXR4GAEgASgLMgkuUGxhc21h",
            "VHgiEgoQUGxhc21hVHhSZXNwb25zZSKXAQoORGVwb3NpdFJlcXVlc3QSEAoE",
            "c2xvdBgBIAEoBEICMAESHwoNZGVwb3NpdF9ibG9jaxgCIAEoCzIILkJpZ1VJ",
            "bnQSHgoMZGVub21pbmF0aW9uGAMgASgLMgguQmlnVUludBIWCgRmcm9tGAQg",
            "ASgLMgguQWRkcmVzcxIaCghjb250cmFjdBgFIAEoCzIILkFkZHJlc3NCIKoC",
            "HUxvb20uQ2xpZW50LkludGVybmFsLlByb3RvYnVmYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Loom.Client.Internal.Protobuf.LoomReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.PlasmaBlock), global::Loom.Client.Internal.Protobuf.PlasmaBlock.Parser, new[]{ "Uid", "Transactions", "Signature", "MerkleHash", "Hash", "Proof" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.PlasmaTx), global::Loom.Client.Internal.Protobuf.PlasmaTx.Parser, new[]{ "Slot", "PreviousBlock", "Denomination", "NewOwner", "Signature", "Hash", "MerkleHash", "Sender", "Proof" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.GetCurrentBlockRequest), global::Loom.Client.Internal.Protobuf.GetCurrentBlockRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.GetCurrentBlockResponse), global::Loom.Client.Internal.Protobuf.GetCurrentBlockResponse.Parser, new[]{ "BlockHeight" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.GetBlockRequest), global::Loom.Client.Internal.Protobuf.GetBlockRequest.Parser, new[]{ "BlockHeight" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.GetBlockResponse), global::Loom.Client.Internal.Protobuf.GetBlockResponse.Parser, new[]{ "Block" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.SubmitBlockToMainnetRequest), global::Loom.Client.Internal.Protobuf.SubmitBlockToMainnetRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.SubmitBlockToMainnetResponse), global::Loom.Client.Internal.Protobuf.SubmitBlockToMainnetResponse.Parser, new[]{ "MerkleHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.PlasmaTxRequest), global::Loom.Client.Internal.Protobuf.PlasmaTxRequest.Parser, new[]{ "Plasmatx" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.PlasmaTxResponse), global::Loom.Client.Internal.Protobuf.PlasmaTxResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.DepositRequest), global::Loom.Client.Internal.Protobuf.DepositRequest.Parser, new[]{ "Slot", "DepositBlock", "Denomination", "From", "Contract" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class PlasmaBlock : pb::IMessage<PlasmaBlock> {
    private static readonly pb::MessageParser<PlasmaBlock> _parser = new pb::MessageParser<PlasmaBlock>(() => new PlasmaBlock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlasmaBlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.PlasmaCashReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlasmaBlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlasmaBlock(PlasmaBlock other) : this() {
      uid_ = other.uid_ != null ? other.uid_.Clone() : null;
      transactions_ = other.transactions_.Clone();
      signature_ = other.signature_;
      merkleHash_ = other.merkleHash_;
      hash_ = other.hash_;
      proof_ = other.proof_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlasmaBlock Clone() {
      return new PlasmaBlock(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private global::Loom.Client.Internal.Protobuf.BigUInt uid_;
    /// <summary>
    /// Plasma block height/number
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.BigUInt Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    /// <summary>Field number for the "transactions" field.</summary>
    public const int TransactionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Loom.Client.Internal.Protobuf.PlasmaTx> _repeated_transactions_codec
        = pb::FieldCodec.ForMessage(18, global::Loom.Client.Internal.Protobuf.PlasmaTx.Parser);
    private readonly pbc::RepeatedField<global::Loom.Client.Internal.Protobuf.PlasmaTx> transactions_ = new pbc::RepeatedField<global::Loom.Client.Internal.Protobuf.PlasmaTx>();
    /// <summary>
    /// Transactions included in the block
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Loom.Client.Internal.Protobuf.PlasmaTx> Transactions {
      get { return transactions_; }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 3;
    private pb::ByteString signature_ = pb::ByteString.Empty;
    /// <summary>
    /// TODO: remove?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "merkle_hash" field.</summary>
    public const int MerkleHashFieldNumber = 4;
    private pb::ByteString merkleHash_ = pb::ByteString.Empty;
    /// <summary>
    /// Block's merkle root from its included transactions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MerkleHash {
      get { return merkleHash_; }
      set {
        merkleHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 5;
    private pb::ByteString hash_ = pb::ByteString.Empty;
    /// <summary>
    /// TODO: remove?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "proof" field.</summary>
    public const int ProofFieldNumber = 6;
    private pb::ByteString proof_ = pb::ByteString.Empty;
    /// <summary>
    /// TODO: remove?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Proof {
      get { return proof_; }
      set {
        proof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlasmaBlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlasmaBlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Uid, other.Uid)) return false;
      if(!transactions_.Equals(other.transactions_)) return false;
      if (Signature != other.Signature) return false;
      if (MerkleHash != other.MerkleHash) return false;
      if (Hash != other.Hash) return false;
      if (Proof != other.Proof) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (uid_ != null) hash ^= Uid.GetHashCode();
      hash ^= transactions_.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (MerkleHash.Length != 0) hash ^= MerkleHash.GetHashCode();
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      if (Proof.Length != 0) hash ^= Proof.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (uid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Uid);
      }
      transactions_.WriteTo(output, _repeated_transactions_codec);
      if (Signature.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Signature);
      }
      if (MerkleHash.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(MerkleHash);
      }
      if (Hash.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Hash);
      }
      if (Proof.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Proof);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (uid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Uid);
      }
      size += transactions_.CalculateSize(_repeated_transactions_codec);
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      if (MerkleHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MerkleHash);
      }
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
      }
      if (Proof.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Proof);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlasmaBlock other) {
      if (other == null) {
        return;
      }
      if (other.uid_ != null) {
        if (uid_ == null) {
          uid_ = new global::Loom.Client.Internal.Protobuf.BigUInt();
        }
        Uid.MergeFrom(other.Uid);
      }
      transactions_.Add(other.transactions_);
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      if (other.MerkleHash.Length != 0) {
        MerkleHash = other.MerkleHash;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
      if (other.Proof.Length != 0) {
        Proof = other.Proof;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (uid_ == null) {
              uid_ = new global::Loom.Client.Internal.Protobuf.BigUInt();
            }
            input.ReadMessage(uid_);
            break;
          }
          case 18: {
            transactions_.AddEntriesFrom(input, _repeated_transactions_codec);
            break;
          }
          case 26: {
            Signature = input.ReadBytes();
            break;
          }
          case 34: {
            MerkleHash = input.ReadBytes();
            break;
          }
          case 42: {
            Hash = input.ReadBytes();
            break;
          }
          case 50: {
            Proof = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class PlasmaTx : pb::IMessage<PlasmaTx> {
    private static readonly pb::MessageParser<PlasmaTx> _parser = new pb::MessageParser<PlasmaTx>(() => new PlasmaTx());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlasmaTx> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.PlasmaCashReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlasmaTx() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlasmaTx(PlasmaTx other) : this() {
      slot_ = other.slot_;
      previousBlock_ = other.previousBlock_ != null ? other.previousBlock_.Clone() : null;
      denomination_ = other.denomination_ != null ? other.denomination_.Clone() : null;
      newOwner_ = other.newOwner_ != null ? other.newOwner_.Clone() : null;
      signature_ = other.signature_;
      hash_ = other.hash_;
      merkleHash_ = other.merkleHash_;
      sender_ = other.sender_ != null ? other.sender_.Clone() : null;
      proof_ = other.proof_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlasmaTx Clone() {
      return new PlasmaTx(this);
    }

    /// <summary>Field number for the "slot" field.</summary>
    public const int SlotFieldNumber = 1;
    private ulong slot_;
    /// <summary>
    /// The slot of the UTXO - Currently uint64, subject to change.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Slot {
      get { return slot_; }
      set {
        slot_ = value;
      }
    }

    /// <summary>Field number for the "previous_block" field.</summary>
    public const int PreviousBlockFieldNumber = 2;
    private global::Loom.Client.Internal.Protobuf.BigUInt previousBlock_;
    /// <summary>
    /// BigUInt //Each time a transaction is created, it MUST refer to a previous block which also included that transaction. A transaction is considered a “deposit transaction”, if it’s the first UTXO after a user deposits their coin in the Plasma Chain. This transaction mints coins from nowhere in the Plasma Chain and as a result its previous block is 0.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.BigUInt PreviousBlock {
      get { return previousBlock_; }
      set {
        previousBlock_ = value;
      }
    }

    /// <summary>Field number for the "denomination" field.</summary>
    public const int DenominationFieldNumber = 3;
    private global::Loom.Client.Internal.Protobuf.BigUInt denomination_;
    /// <summary>
    /// BigUInt // How many coins are included in that UTXO. Currently this is always 1 since we’re using ERC721 tokens which are unique, however in future iterations this can be any number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.BigUInt Denomination {
      get { return denomination_; }
      set {
        denomination_ = value;
      }
    }

    /// <summary>Field number for the "new_owner" field.</summary>
    public const int NewOwnerFieldNumber = 4;
    private global::Loom.Client.Internal.Protobuf.Address newOwner_;
    /// <summary>
    ///  The new owner of the transaction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.Address NewOwner {
      get { return newOwner_; }
      set {
        newOwner_ = value;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 5;
    private pb::ByteString signature_ = pb::ByteString.Empty;
    /// <summary>
    /// Signature on the transaction's hash
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 6;
    private pb::ByteString hash_ = pb::ByteString.Empty;
    /// <summary>
    /// The hash of the RLP encoded unsigned transaction’s bytes. If the transaction is a deposit transaction (its prevblock is 0), its hash is the hash of its uid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "merkle_hash" field.</summary>
    public const int MerkleHashFieldNumber = 7;
    private pb::ByteString merkleHash_ = pb::ByteString.Empty;
    /// <summary>
    /// The hash of the RLP encoded signed transaction’s bytes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MerkleHash {
      get { return merkleHash_; }
      set {
        merkleHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 8;
    private global::Loom.Client.Internal.Protobuf.Address sender_;
    /// <summary>
    /// TODO: seems redundant, remove?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.Address Sender {
      get { return sender_; }
      set {
        sender_ = value;
      }
    }

    /// <summary>Field number for the "proof" field.</summary>
    public const int ProofFieldNumber = 9;
    private pb::ByteString proof_ = pb::ByteString.Empty;
    /// <summary>
    /// Proof after its inserted into the block
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Proof {
      get { return proof_; }
      set {
        proof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlasmaTx);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlasmaTx other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Slot != other.Slot) return false;
      if (!object.Equals(PreviousBlock, other.PreviousBlock)) return false;
      if (!object.Equals(Denomination, other.Denomination)) return false;
      if (!object.Equals(NewOwner, other.NewOwner)) return false;
      if (Signature != other.Signature) return false;
      if (Hash != other.Hash) return false;
      if (MerkleHash != other.MerkleHash) return false;
      if (!object.Equals(Sender, other.Sender)) return false;
      if (Proof != other.Proof) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Slot != 0UL) hash ^= Slot.GetHashCode();
      if (previousBlock_ != null) hash ^= PreviousBlock.GetHashCode();
      if (denomination_ != null) hash ^= Denomination.GetHashCode();
      if (newOwner_ != null) hash ^= NewOwner.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      if (MerkleHash.Length != 0) hash ^= MerkleHash.GetHashCode();
      if (sender_ != null) hash ^= Sender.GetHashCode();
      if (Proof.Length != 0) hash ^= Proof.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Slot != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Slot);
      }
      if (previousBlock_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PreviousBlock);
      }
      if (denomination_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Denomination);
      }
      if (newOwner_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NewOwner);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Signature);
      }
      if (Hash.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Hash);
      }
      if (MerkleHash.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(MerkleHash);
      }
      if (sender_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Sender);
      }
      if (Proof.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(Proof);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Slot != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Slot);
      }
      if (previousBlock_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PreviousBlock);
      }
      if (denomination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Denomination);
      }
      if (newOwner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewOwner);
      }
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
      }
      if (MerkleHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MerkleHash);
      }
      if (sender_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sender);
      }
      if (Proof.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Proof);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlasmaTx other) {
      if (other == null) {
        return;
      }
      if (other.Slot != 0UL) {
        Slot = other.Slot;
      }
      if (other.previousBlock_ != null) {
        if (previousBlock_ == null) {
          previousBlock_ = new global::Loom.Client.Internal.Protobuf.BigUInt();
        }
        PreviousBlock.MergeFrom(other.PreviousBlock);
      }
      if (other.denomination_ != null) {
        if (denomination_ == null) {
          denomination_ = new global::Loom.Client.Internal.Protobuf.BigUInt();
        }
        Denomination.MergeFrom(other.Denomination);
      }
      if (other.newOwner_ != null) {
        if (newOwner_ == null) {
          newOwner_ = new global::Loom.Client.Internal.Protobuf.Address();
        }
        NewOwner.MergeFrom(other.NewOwner);
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
      if (other.MerkleHash.Length != 0) {
        MerkleHash = other.MerkleHash;
      }
      if (other.sender_ != null) {
        if (sender_ == null) {
          sender_ = new global::Loom.Client.Internal.Protobuf.Address();
        }
        Sender.MergeFrom(other.Sender);
      }
      if (other.Proof.Length != 0) {
        Proof = other.Proof;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Slot = input.ReadUInt64();
            break;
          }
          case 18: {
            if (previousBlock_ == null) {
              previousBlock_ = new global::Loom.Client.Internal.Protobuf.BigUInt();
            }
            input.ReadMessage(previousBlock_);
            break;
          }
          case 26: {
            if (denomination_ == null) {
              denomination_ = new global::Loom.Client.Internal.Protobuf.BigUInt();
            }
            input.ReadMessage(denomination_);
            break;
          }
          case 34: {
            if (newOwner_ == null) {
              newOwner_ = new global::Loom.Client.Internal.Protobuf.Address();
            }
            input.ReadMessage(newOwner_);
            break;
          }
          case 42: {
            Signature = input.ReadBytes();
            break;
          }
          case 50: {
            Hash = input.ReadBytes();
            break;
          }
          case 58: {
            MerkleHash = input.ReadBytes();
            break;
          }
          case 66: {
            if (sender_ == null) {
              sender_ = new global::Loom.Client.Internal.Protobuf.Address();
            }
            input.ReadMessage(sender_);
            break;
          }
          case 74: {
            Proof = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class GetCurrentBlockRequest : pb::IMessage<GetCurrentBlockRequest> {
    private static readonly pb::MessageParser<GetCurrentBlockRequest> _parser = new pb::MessageParser<GetCurrentBlockRequest>(() => new GetCurrentBlockRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCurrentBlockRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.PlasmaCashReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCurrentBlockRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCurrentBlockRequest(GetCurrentBlockRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCurrentBlockRequest Clone() {
      return new GetCurrentBlockRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCurrentBlockRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCurrentBlockRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCurrentBlockRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  internal sealed partial class GetCurrentBlockResponse : pb::IMessage<GetCurrentBlockResponse> {
    private static readonly pb::MessageParser<GetCurrentBlockResponse> _parser = new pb::MessageParser<GetCurrentBlockResponse>(() => new GetCurrentBlockResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCurrentBlockResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.PlasmaCashReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCurrentBlockResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCurrentBlockResponse(GetCurrentBlockResponse other) : this() {
      blockHeight_ = other.blockHeight_ != null ? other.blockHeight_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCurrentBlockResponse Clone() {
      return new GetCurrentBlockResponse(this);
    }

    /// <summary>Field number for the "block_height" field.</summary>
    public const int BlockHeightFieldNumber = 1;
    private global::Loom.Client.Internal.Protobuf.BigUInt blockHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.BigUInt BlockHeight {
      get { return blockHeight_; }
      set {
        blockHeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCurrentBlockResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCurrentBlockResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BlockHeight, other.BlockHeight)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (blockHeight_ != null) hash ^= BlockHeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (blockHeight_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BlockHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (blockHeight_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BlockHeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCurrentBlockResponse other) {
      if (other == null) {
        return;
      }
      if (other.blockHeight_ != null) {
        if (blockHeight_ == null) {
          blockHeight_ = new global::Loom.Client.Internal.Protobuf.BigUInt();
        }
        BlockHeight.MergeFrom(other.BlockHeight);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (blockHeight_ == null) {
              blockHeight_ = new global::Loom.Client.Internal.Protobuf.BigUInt();
            }
            input.ReadMessage(blockHeight_);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class GetBlockRequest : pb::IMessage<GetBlockRequest> {
    private static readonly pb::MessageParser<GetBlockRequest> _parser = new pb::MessageParser<GetBlockRequest>(() => new GetBlockRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.PlasmaCashReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockRequest(GetBlockRequest other) : this() {
      blockHeight_ = other.blockHeight_ != null ? other.blockHeight_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockRequest Clone() {
      return new GetBlockRequest(this);
    }

    /// <summary>Field number for the "block_height" field.</summary>
    public const int BlockHeightFieldNumber = 1;
    private global::Loom.Client.Internal.Protobuf.BigUInt blockHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.BigUInt BlockHeight {
      get { return blockHeight_; }
      set {
        blockHeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BlockHeight, other.BlockHeight)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (blockHeight_ != null) hash ^= BlockHeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (blockHeight_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BlockHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (blockHeight_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BlockHeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockRequest other) {
      if (other == null) {
        return;
      }
      if (other.blockHeight_ != null) {
        if (blockHeight_ == null) {
          blockHeight_ = new global::Loom.Client.Internal.Protobuf.BigUInt();
        }
        BlockHeight.MergeFrom(other.BlockHeight);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (blockHeight_ == null) {
              blockHeight_ = new global::Loom.Client.Internal.Protobuf.BigUInt();
            }
            input.ReadMessage(blockHeight_);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class GetBlockResponse : pb::IMessage<GetBlockResponse> {
    private static readonly pb::MessageParser<GetBlockResponse> _parser = new pb::MessageParser<GetBlockResponse>(() => new GetBlockResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.PlasmaCashReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockResponse(GetBlockResponse other) : this() {
      block_ = other.block_ != null ? other.block_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockResponse Clone() {
      return new GetBlockResponse(this);
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 1;
    private global::Loom.Client.Internal.Protobuf.PlasmaBlock block_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.PlasmaBlock Block {
      get { return block_; }
      set {
        block_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Block, other.Block)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (block_ != null) hash ^= Block.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (block_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Block);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (block_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Block);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockResponse other) {
      if (other == null) {
        return;
      }
      if (other.block_ != null) {
        if (block_ == null) {
          block_ = new global::Loom.Client.Internal.Protobuf.PlasmaBlock();
        }
        Block.MergeFrom(other.Block);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (block_ == null) {
              block_ = new global::Loom.Client.Internal.Protobuf.PlasmaBlock();
            }
            input.ReadMessage(block_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// This only originates from the validator
  /// </summary>
  internal sealed partial class SubmitBlockToMainnetRequest : pb::IMessage<SubmitBlockToMainnetRequest> {
    private static readonly pb::MessageParser<SubmitBlockToMainnetRequest> _parser = new pb::MessageParser<SubmitBlockToMainnetRequest>(() => new SubmitBlockToMainnetRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitBlockToMainnetRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.PlasmaCashReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitBlockToMainnetRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitBlockToMainnetRequest(SubmitBlockToMainnetRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitBlockToMainnetRequest Clone() {
      return new SubmitBlockToMainnetRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitBlockToMainnetRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitBlockToMainnetRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitBlockToMainnetRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  internal sealed partial class SubmitBlockToMainnetResponse : pb::IMessage<SubmitBlockToMainnetResponse> {
    private static readonly pb::MessageParser<SubmitBlockToMainnetResponse> _parser = new pb::MessageParser<SubmitBlockToMainnetResponse>(() => new SubmitBlockToMainnetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitBlockToMainnetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.PlasmaCashReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitBlockToMainnetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitBlockToMainnetResponse(SubmitBlockToMainnetResponse other) : this() {
      merkleHash_ = other.merkleHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitBlockToMainnetResponse Clone() {
      return new SubmitBlockToMainnetResponse(this);
    }

    /// <summary>Field number for the "merkle_hash" field.</summary>
    public const int MerkleHashFieldNumber = 1;
    private pb::ByteString merkleHash_ = pb::ByteString.Empty;
    /// <summary>
    /// Merkle root of Plasma block to be submitted to mainnet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MerkleHash {
      get { return merkleHash_; }
      set {
        merkleHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitBlockToMainnetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitBlockToMainnetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MerkleHash != other.MerkleHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MerkleHash.Length != 0) hash ^= MerkleHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MerkleHash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(MerkleHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MerkleHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MerkleHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitBlockToMainnetResponse other) {
      if (other == null) {
        return;
      }
      if (other.MerkleHash.Length != 0) {
        MerkleHash = other.MerkleHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MerkleHash = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class PlasmaTxRequest : pb::IMessage<PlasmaTxRequest> {
    private static readonly pb::MessageParser<PlasmaTxRequest> _parser = new pb::MessageParser<PlasmaTxRequest>(() => new PlasmaTxRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlasmaTxRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.PlasmaCashReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlasmaTxRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlasmaTxRequest(PlasmaTxRequest other) : this() {
      plasmatx_ = other.plasmatx_ != null ? other.plasmatx_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlasmaTxRequest Clone() {
      return new PlasmaTxRequest(this);
    }

    /// <summary>Field number for the "plasmatx" field.</summary>
    public const int PlasmatxFieldNumber = 1;
    private global::Loom.Client.Internal.Protobuf.PlasmaTx plasmatx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.PlasmaTx Plasmatx {
      get { return plasmatx_; }
      set {
        plasmatx_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlasmaTxRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlasmaTxRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Plasmatx, other.Plasmatx)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (plasmatx_ != null) hash ^= Plasmatx.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (plasmatx_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Plasmatx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (plasmatx_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Plasmatx);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlasmaTxRequest other) {
      if (other == null) {
        return;
      }
      if (other.plasmatx_ != null) {
        if (plasmatx_ == null) {
          plasmatx_ = new global::Loom.Client.Internal.Protobuf.PlasmaTx();
        }
        Plasmatx.MergeFrom(other.Plasmatx);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (plasmatx_ == null) {
              plasmatx_ = new global::Loom.Client.Internal.Protobuf.PlasmaTx();
            }
            input.ReadMessage(plasmatx_);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class PlasmaTxResponse : pb::IMessage<PlasmaTxResponse> {
    private static readonly pb::MessageParser<PlasmaTxResponse> _parser = new pb::MessageParser<PlasmaTxResponse>(() => new PlasmaTxResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlasmaTxResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.PlasmaCashReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlasmaTxResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlasmaTxResponse(PlasmaTxResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlasmaTxResponse Clone() {
      return new PlasmaTxResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlasmaTxResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlasmaTxResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlasmaTxResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  internal sealed partial class DepositRequest : pb::IMessage<DepositRequest> {
    private static readonly pb::MessageParser<DepositRequest> _parser = new pb::MessageParser<DepositRequest>(() => new DepositRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DepositRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.PlasmaCashReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DepositRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DepositRequest(DepositRequest other) : this() {
      slot_ = other.slot_;
      depositBlock_ = other.depositBlock_ != null ? other.depositBlock_.Clone() : null;
      denomination_ = other.denomination_ != null ? other.denomination_.Clone() : null;
      from_ = other.from_ != null ? other.from_.Clone() : null;
      contract_ = other.contract_ != null ? other.contract_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DepositRequest Clone() {
      return new DepositRequest(this);
    }

    /// <summary>Field number for the "slot" field.</summary>
    public const int SlotFieldNumber = 1;
    private ulong slot_;
    /// <summary>
    /// The slot of the UTXO - Currently uint64, subject to change.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Slot {
      get { return slot_; }
      set {
        slot_ = value;
      }
    }

    /// <summary>Field number for the "deposit_block" field.</summary>
    public const int DepositBlockFieldNumber = 2;
    private global::Loom.Client.Internal.Protobuf.BigUInt depositBlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.BigUInt DepositBlock {
      get { return depositBlock_; }
      set {
        depositBlock_ = value;
      }
    }

    /// <summary>Field number for the "denomination" field.</summary>
    public const int DenominationFieldNumber = 3;
    private global::Loom.Client.Internal.Protobuf.BigUInt denomination_;
    /// <summary>
    /// For ERC20 this is the number of coins deposited, for ERC721 this is a token ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.BigUInt Denomination {
      get { return denomination_; }
      set {
        denomination_ = value;
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 4;
    private global::Loom.Client.Internal.Protobuf.Address from_;
    /// <summary>
    /// Entity that made the deposit
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.Address From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "contract" field.</summary>
    public const int ContractFieldNumber = 5;
    private global::Loom.Client.Internal.Protobuf.Address contract_;
    /// <summary>
    /// Contract from which the coins originated (i.e. the currency of the coins)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.Address Contract {
      get { return contract_; }
      set {
        contract_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DepositRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DepositRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Slot != other.Slot) return false;
      if (!object.Equals(DepositBlock, other.DepositBlock)) return false;
      if (!object.Equals(Denomination, other.Denomination)) return false;
      if (!object.Equals(From, other.From)) return false;
      if (!object.Equals(Contract, other.Contract)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Slot != 0UL) hash ^= Slot.GetHashCode();
      if (depositBlock_ != null) hash ^= DepositBlock.GetHashCode();
      if (denomination_ != null) hash ^= Denomination.GetHashCode();
      if (from_ != null) hash ^= From.GetHashCode();
      if (contract_ != null) hash ^= Contract.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Slot != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Slot);
      }
      if (depositBlock_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DepositBlock);
      }
      if (denomination_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Denomination);
      }
      if (from_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(From);
      }
      if (contract_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Contract);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Slot != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Slot);
      }
      if (depositBlock_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DepositBlock);
      }
      if (denomination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Denomination);
      }
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (contract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Contract);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DepositRequest other) {
      if (other == null) {
        return;
      }
      if (other.Slot != 0UL) {
        Slot = other.Slot;
      }
      if (other.depositBlock_ != null) {
        if (depositBlock_ == null) {
          depositBlock_ = new global::Loom.Client.Internal.Protobuf.BigUInt();
        }
        DepositBlock.MergeFrom(other.DepositBlock);
      }
      if (other.denomination_ != null) {
        if (denomination_ == null) {
          denomination_ = new global::Loom.Client.Internal.Protobuf.BigUInt();
        }
        Denomination.MergeFrom(other.Denomination);
      }
      if (other.from_ != null) {
        if (from_ == null) {
          from_ = new global::Loom.Client.Internal.Protobuf.Address();
        }
        From.MergeFrom(other.From);
      }
      if (other.contract_ != null) {
        if (contract_ == null) {
          contract_ = new global::Loom.Client.Internal.Protobuf.Address();
        }
        Contract.MergeFrom(other.Contract);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Slot = input.ReadUInt64();
            break;
          }
          case 18: {
            if (depositBlock_ == null) {
              depositBlock_ = new global::Loom.Client.Internal.Protobuf.BigUInt();
            }
            input.ReadMessage(depositBlock_);
            break;
          }
          case 26: {
            if (denomination_ == null) {
              denomination_ = new global::Loom.Client.Internal.Protobuf.BigUInt();
            }
            input.ReadMessage(denomination_);
            break;
          }
          case 34: {
            if (from_ == null) {
              from_ = new global::Loom.Client.Internal.Protobuf.Address();
            }
            input.ReadMessage(from_);
            break;
          }
          case 42: {
            if (contract_ == null) {
              contract_ = new global::Loom.Client.Internal.Protobuf.Address();
            }
            input.ReadMessage(contract_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
