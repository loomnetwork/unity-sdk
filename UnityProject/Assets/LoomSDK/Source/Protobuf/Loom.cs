// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: loom.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Loom.Google.Protobuf;
using pbc = global::Loom.Google.Protobuf.Collections;
using pbr = global::Loom.Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Loom.Client.Internal.Protobuf {

  /// <summary>Holder for reflection information generated from loom.proto</summary>
  internal static partial class LoomReflection {

    #region Descriptor
    /// <summary>File descriptor for loom.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LoomReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgpsb29tLnByb3RvIkAKCFNpZ25lZFR4Eg0KBWlubmVyGAEgASgMEhEKCXNp",
            "Z25hdHVyZRgCIAEoDBISCgpwdWJsaWNfa2V5GAMgASgMIioKB05vbmNlVHgS",
            "DQoFaW5uZXIYASABKAwSEAoIc2VxdWVuY2UYAiABKAQiKgoHQWRkcmVzcxIQ",
            "CghjaGFpbl9pZBgBIAEoCRINCgVsb2NhbBgCIAEoDCInCgtUcmFuc2FjdGlv",
            "bhIKCgJpZBgBIAEoDRIMCgRkYXRhGAIgASgMIkcKCU1lc3NhZ2VUeBIUCgJ0",
            "bxgBIAEoCzIILkFkZHJlc3MSFgoEZnJvbRgCIAEoCzIILkFkZHJlc3MSDAoE",
            "ZGF0YRgDIAEoDCJACghEZXBsb3lUeBIYCgd2bV90eXBlGAEgASgOMgcuVk1U",
            "eXBlEgwKBGNvZGUYAiABKAwSDAoEbmFtZRgDIAEoCSI8Cg5EZXBsb3lSZXNw",
            "b25zZRIaCghjb250cmFjdBgBIAEoCzIILkFkZHJlc3MSDgoGb3V0cHV0GAIg",
            "ASgMIjcKEkRlcGxveVJlc3BvbnNlRGF0YRIPCgd0eF9oYXNoGAEgASgMEhAK",
            "CGJ5dGVjb2RlGAIgASgMIjEKBkNhbGxUeBIYCgd2bV90eXBlGAEgASgOMgcu",
            "Vk1UeXBlEg0KBWlucHV0GAIgASgMIikKClBsdWdpbkNvZGUSDAoEbmFtZRgB",
            "IAEoCRINCgVpbnB1dBgCIAEoDCJbCgdSZXF1ZXN0EiMKDGNvbnRlbnRfdHlw",
            "ZRgBIAEoDjINLkVuY29kaW5nVHlwZRIdCgZhY2NlcHQYAiABKA4yDS5FbmNv",
            "ZGluZ1R5cGUSDAoEYm9keRgDIAEoDCI9CghSZXNwb25zZRIjCgxjb250ZW50",
            "X3R5cGUYASABKA4yDS5FbmNvZGluZ1R5cGUSDAoEYm9keRgCIAEoDCIyChJD",
            "b250cmFjdE1ldGhvZENhbGwSDgoGbWV0aG9kGAEgASgJEgwKBGFyZ3MYAiAB",
            "KAwiHQoKVHhIYXNoTGlzdBIPCgd0eF9oYXNoGAEgAygMIisKDUV2ZW50RGF0",
            "YUxpc3QSGgoGZXZlbnRzGAEgAygLMgouRXZlbnREYXRhIrwBCglFdmVudERh",
            "dGESDgoGdG9waWNzGAEgAygJEhgKBmNhbGxlchgCIAEoCzIILkFkZHJlc3MS",
            "GQoHYWRkcmVzcxgDIAEoCzIILkFkZHJlc3MSEwoLcGx1Z2luX25hbWUYBCAB",
            "KAkSFAoMYmxvY2tfaGVpZ2h0GAUgASgEEhQKDGVuY29kZWRfYm9keRgGIAEo",
            "DBIYChBvcmlnaW5hbF9yZXF1ZXN0GAcgASgMEg8KB3R4X2hhc2gYCCABKAwi",
            "MwoNVHhSZWNlaXB0TGlzdBIiCgt0eF9yZWNlaXB0cxgBIAMoCzINLkV2bVR4",
            "UmVjZWlwdCLaAQoMRXZtVHhSZWNlaXB0EhkKEXRyYW5zYWN0aW9uX2luZGV4",
            "GAEgASgFEhIKCmJsb2NrX2hhc2gYAiABKAwSFAoMYmxvY2tfbnVtYmVyGAMg",
            "ASgDEhsKE2N1bXVsYXRpdmVfZ2FzX3VzZWQYBCABKAUSEAoIZ2FzX3VzZWQY",
            "BSABKAUSGAoQY29udHJhY3RfYWRkcmVzcxgGIAEoDBIYCgRsb2dzGAcgAygL",
            "MgouRXZlbnREYXRhEhIKCmxvZ3NfYmxvb20YCCABKAwSDgoGc3RhdHVzGAkg",
            "ASgFKh0KBlZNVHlwZRIKCgZQTFVHSU4QABIHCgNFVk0QASonCgxFbmNvZGlu",
            "Z1R5cGUSCAoESlNPThAAEg0KCVBST1RPQlVGMxABQiOqAiBMb29tLkNsaWVu",
            "dFNkay5JbnRlcm5hbC5Qcm90b2J1ZmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Loom.Client.Internal.Protobuf.VMType), typeof(global::Loom.Client.Internal.Protobuf.EncodingType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.SignedTx), global::Loom.Client.Internal.Protobuf.SignedTx.Parser, new[]{ "Inner", "Signature", "PublicKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.NonceTx), global::Loom.Client.Internal.Protobuf.NonceTx.Parser, new[]{ "Inner", "Sequence" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.Address), global::Loom.Client.Internal.Protobuf.Address.Parser, new[]{ "ChainId", "Local" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.Transaction), global::Loom.Client.Internal.Protobuf.Transaction.Parser, new[]{ "Id", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.MessageTx), global::Loom.Client.Internal.Protobuf.MessageTx.Parser, new[]{ "To", "From", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.DeployTx), global::Loom.Client.Internal.Protobuf.DeployTx.Parser, new[]{ "VmType", "Code", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.DeployResponse), global::Loom.Client.Internal.Protobuf.DeployResponse.Parser, new[]{ "Contract", "Output" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.DeployResponseData), global::Loom.Client.Internal.Protobuf.DeployResponseData.Parser, new[]{ "TxHash", "Bytecode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.CallTx), global::Loom.Client.Internal.Protobuf.CallTx.Parser, new[]{ "VmType", "Input" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.PluginCode), global::Loom.Client.Internal.Protobuf.PluginCode.Parser, new[]{ "Name", "Input" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.Request), global::Loom.Client.Internal.Protobuf.Request.Parser, new[]{ "ContentType", "Accept", "Body" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.Response), global::Loom.Client.Internal.Protobuf.Response.Parser, new[]{ "ContentType", "Body" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.ContractMethodCall), global::Loom.Client.Internal.Protobuf.ContractMethodCall.Parser, new[]{ "Method", "Args" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.TxHashList), global::Loom.Client.Internal.Protobuf.TxHashList.Parser, new[]{ "TxHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.EventDataList), global::Loom.Client.Internal.Protobuf.EventDataList.Parser, new[]{ "Events" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.EventData), global::Loom.Client.Internal.Protobuf.EventData.Parser, new[]{ "Topics", "Caller", "Address", "PluginName", "BlockHeight", "EncodedBody", "OriginalRequest", "TxHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.TxReceiptList), global::Loom.Client.Internal.Protobuf.TxReceiptList.Parser, new[]{ "TxReceipts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.EvmTxReceipt), global::Loom.Client.Internal.Protobuf.EvmTxReceipt.Parser, new[]{ "TransactionIndex", "BlockHash", "BlockNumber", "CumulativeGasUsed", "GasUsed", "ContractAddress", "Logs", "LogsBloom", "Status" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  internal enum VMType {
    [pbr::OriginalName("PLUGIN")] Plugin = 0,
    [pbr::OriginalName("EVM")] Evm = 1,
  }

  internal enum EncodingType {
    [pbr::OriginalName("JSON")] Json = 0,
    [pbr::OriginalName("PROTOBUF3")] Protobuf3 = 1,
  }

  #endregion

  #region Messages
  internal sealed partial class SignedTx : pb::IMessage<SignedTx> {
    private static readonly pb::MessageParser<SignedTx> _parser = new pb::MessageParser<SignedTx>(() => new SignedTx());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SignedTx> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.LoomReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignedTx() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignedTx(SignedTx other) : this() {
      inner_ = other.inner_;
      signature_ = other.signature_;
      publicKey_ = other.publicKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignedTx Clone() {
      return new SignedTx(this);
    }

    /// <summary>Field number for the "inner" field.</summary>
    public const int InnerFieldNumber = 1;
    private pb::ByteString inner_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Inner {
      get { return inner_; }
      set {
        inner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private pb::ByteString signature_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "public_key" field.</summary>
    public const int PublicKeyFieldNumber = 3;
    private pb::ByteString publicKey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PublicKey {
      get { return publicKey_; }
      set {
        publicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SignedTx);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SignedTx other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Inner != other.Inner) return false;
      if (Signature != other.Signature) return false;
      if (PublicKey != other.PublicKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Inner.Length != 0) hash ^= Inner.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (PublicKey.Length != 0) hash ^= PublicKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Inner.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Inner);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Signature);
      }
      if (PublicKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(PublicKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Inner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Inner);
      }
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      if (PublicKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PublicKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SignedTx other) {
      if (other == null) {
        return;
      }
      if (other.Inner.Length != 0) {
        Inner = other.Inner;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      if (other.PublicKey.Length != 0) {
        PublicKey = other.PublicKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Inner = input.ReadBytes();
            break;
          }
          case 18: {
            Signature = input.ReadBytes();
            break;
          }
          case 26: {
            PublicKey = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class NonceTx : pb::IMessage<NonceTx> {
    private static readonly pb::MessageParser<NonceTx> _parser = new pb::MessageParser<NonceTx>(() => new NonceTx());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NonceTx> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.LoomReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NonceTx() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NonceTx(NonceTx other) : this() {
      inner_ = other.inner_;
      sequence_ = other.sequence_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NonceTx Clone() {
      return new NonceTx(this);
    }

    /// <summary>Field number for the "inner" field.</summary>
    public const int InnerFieldNumber = 1;
    private pb::ByteString inner_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Inner {
      get { return inner_; }
      set {
        inner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sequence" field.</summary>
    public const int SequenceFieldNumber = 2;
    private ulong sequence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Sequence {
      get { return sequence_; }
      set {
        sequence_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NonceTx);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NonceTx other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Inner != other.Inner) return false;
      if (Sequence != other.Sequence) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Inner.Length != 0) hash ^= Inner.GetHashCode();
      if (Sequence != 0UL) hash ^= Sequence.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Inner.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Inner);
      }
      if (Sequence != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Sequence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Inner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Inner);
      }
      if (Sequence != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sequence);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NonceTx other) {
      if (other == null) {
        return;
      }
      if (other.Inner.Length != 0) {
        Inner = other.Inner;
      }
      if (other.Sequence != 0UL) {
        Sequence = other.Sequence;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Inner = input.ReadBytes();
            break;
          }
          case 16: {
            Sequence = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class Address : pb::IMessage<Address> {
    private static readonly pb::MessageParser<Address> _parser = new pb::MessageParser<Address>(() => new Address());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Address> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.LoomReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address(Address other) : this() {
      chainId_ = other.chainId_;
      local_ = other.local_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address Clone() {
      return new Address(this);
    }

    /// <summary>Field number for the "chain_id" field.</summary>
    public const int ChainIdFieldNumber = 1;
    private string chainId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChainId {
      get { return chainId_; }
      set {
        chainId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "local" field.</summary>
    public const int LocalFieldNumber = 2;
    private pb::ByteString local_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Local {
      get { return local_; }
      set {
        local_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Address);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Address other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChainId != other.ChainId) return false;
      if (Local != other.Local) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChainId.Length != 0) hash ^= ChainId.GetHashCode();
      if (Local.Length != 0) hash ^= Local.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChainId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ChainId);
      }
      if (Local.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Local);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChainId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChainId);
      }
      if (Local.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Local);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Address other) {
      if (other == null) {
        return;
      }
      if (other.ChainId.Length != 0) {
        ChainId = other.ChainId;
      }
      if (other.Local.Length != 0) {
        Local = other.Local;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ChainId = input.ReadString();
            break;
          }
          case 18: {
            Local = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class Transaction : pb::IMessage<Transaction> {
    private static readonly pb::MessageParser<Transaction> _parser = new pb::MessageParser<Transaction>(() => new Transaction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Transaction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.LoomReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction(Transaction other) : this() {
      id_ = other.id_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction Clone() {
      return new Transaction(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Transaction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Transaction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Transaction other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class MessageTx : pb::IMessage<MessageTx> {
    private static readonly pb::MessageParser<MessageTx> _parser = new pb::MessageParser<MessageTx>(() => new MessageTx());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageTx> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.LoomReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageTx() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageTx(MessageTx other) : this() {
      To = other.to_ != null ? other.To.Clone() : null;
      From = other.from_ != null ? other.From.Clone() : null;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageTx Clone() {
      return new MessageTx(this);
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 1;
    private global::Loom.Client.Internal.Protobuf.Address to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.Address To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 2;
    private global::Loom.Client.Internal.Protobuf.Address from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.Address From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 3;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageTx);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageTx other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(To, other.To)) return false;
      if (!object.Equals(From, other.From)) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (to_ != null) hash ^= To.GetHashCode();
      if (from_ != null) hash ^= From.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (to_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(To);
      }
      if (from_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(From);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageTx other) {
      if (other == null) {
        return;
      }
      if (other.to_ != null) {
        if (to_ == null) {
          to_ = new global::Loom.Client.Internal.Protobuf.Address();
        }
        To.MergeFrom(other.To);
      }
      if (other.from_ != null) {
        if (from_ == null) {
          from_ = new global::Loom.Client.Internal.Protobuf.Address();
        }
        From.MergeFrom(other.From);
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (to_ == null) {
              to_ = new global::Loom.Client.Internal.Protobuf.Address();
            }
            input.ReadMessage(to_);
            break;
          }
          case 18: {
            if (from_ == null) {
              from_ = new global::Loom.Client.Internal.Protobuf.Address();
            }
            input.ReadMessage(from_);
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DeployTx : pb::IMessage<DeployTx> {
    private static readonly pb::MessageParser<DeployTx> _parser = new pb::MessageParser<DeployTx>(() => new DeployTx());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeployTx> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.LoomReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployTx() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployTx(DeployTx other) : this() {
      vmType_ = other.vmType_;
      code_ = other.code_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployTx Clone() {
      return new DeployTx(this);
    }

    /// <summary>Field number for the "vm_type" field.</summary>
    public const int VmTypeFieldNumber = 1;
    private global::Loom.Client.Internal.Protobuf.VMType vmType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.VMType VmType {
      get { return vmType_; }
      set {
        vmType_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private pb::ByteString code_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeployTx);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeployTx other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VmType != other.VmType) return false;
      if (Code != other.Code) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VmType != 0) hash ^= VmType.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (VmType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) VmType);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Code);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VmType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VmType);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Code);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeployTx other) {
      if (other == null) {
        return;
      }
      if (other.VmType != 0) {
        VmType = other.VmType;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            vmType_ = (global::Loom.Client.Internal.Protobuf.VMType) input.ReadEnum();
            break;
          }
          case 18: {
            Code = input.ReadBytes();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DeployResponse : pb::IMessage<DeployResponse> {
    private static readonly pb::MessageParser<DeployResponse> _parser = new pb::MessageParser<DeployResponse>(() => new DeployResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeployResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.LoomReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployResponse(DeployResponse other) : this() {
      Contract = other.contract_ != null ? other.Contract.Clone() : null;
      output_ = other.output_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployResponse Clone() {
      return new DeployResponse(this);
    }

    /// <summary>Field number for the "contract" field.</summary>
    public const int ContractFieldNumber = 1;
    private global::Loom.Client.Internal.Protobuf.Address contract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.Address Contract {
      get { return contract_; }
      set {
        contract_ = value;
      }
    }

    /// <summary>Field number for the "output" field.</summary>
    public const int OutputFieldNumber = 2;
    private pb::ByteString output_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Output {
      get { return output_; }
      set {
        output_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeployResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeployResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Contract, other.Contract)) return false;
      if (Output != other.Output) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (contract_ != null) hash ^= Contract.GetHashCode();
      if (Output.Length != 0) hash ^= Output.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (contract_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Contract);
      }
      if (Output.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Output);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (contract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Contract);
      }
      if (Output.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Output);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeployResponse other) {
      if (other == null) {
        return;
      }
      if (other.contract_ != null) {
        if (contract_ == null) {
          contract_ = new global::Loom.Client.Internal.Protobuf.Address();
        }
        Contract.MergeFrom(other.Contract);
      }
      if (other.Output.Length != 0) {
        Output = other.Output;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (contract_ == null) {
              contract_ = new global::Loom.Client.Internal.Protobuf.Address();
            }
            input.ReadMessage(contract_);
            break;
          }
          case 18: {
            Output = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DeployResponseData : pb::IMessage<DeployResponseData> {
    private static readonly pb::MessageParser<DeployResponseData> _parser = new pb::MessageParser<DeployResponseData>(() => new DeployResponseData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeployResponseData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.LoomReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployResponseData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployResponseData(DeployResponseData other) : this() {
      txHash_ = other.txHash_;
      bytecode_ = other.bytecode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployResponseData Clone() {
      return new DeployResponseData(this);
    }

    /// <summary>Field number for the "tx_hash" field.</summary>
    public const int TxHashFieldNumber = 1;
    private pb::ByteString txHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TxHash {
      get { return txHash_; }
      set {
        txHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bytecode" field.</summary>
    public const int BytecodeFieldNumber = 2;
    private pb::ByteString bytecode_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Bytecode {
      get { return bytecode_; }
      set {
        bytecode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeployResponseData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeployResponseData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TxHash != other.TxHash) return false;
      if (Bytecode != other.Bytecode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TxHash.Length != 0) hash ^= TxHash.GetHashCode();
      if (Bytecode.Length != 0) hash ^= Bytecode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TxHash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(TxHash);
      }
      if (Bytecode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Bytecode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TxHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TxHash);
      }
      if (Bytecode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bytecode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeployResponseData other) {
      if (other == null) {
        return;
      }
      if (other.TxHash.Length != 0) {
        TxHash = other.TxHash;
      }
      if (other.Bytecode.Length != 0) {
        Bytecode = other.Bytecode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TxHash = input.ReadBytes();
            break;
          }
          case 18: {
            Bytecode = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class CallTx : pb::IMessage<CallTx> {
    private static readonly pb::MessageParser<CallTx> _parser = new pb::MessageParser<CallTx>(() => new CallTx());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CallTx> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.LoomReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallTx() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallTx(CallTx other) : this() {
      vmType_ = other.vmType_;
      input_ = other.input_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallTx Clone() {
      return new CallTx(this);
    }

    /// <summary>Field number for the "vm_type" field.</summary>
    public const int VmTypeFieldNumber = 1;
    private global::Loom.Client.Internal.Protobuf.VMType vmType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.VMType VmType {
      get { return vmType_; }
      set {
        vmType_ = value;
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 2;
    private pb::ByteString input_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Input {
      get { return input_; }
      set {
        input_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CallTx);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CallTx other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VmType != other.VmType) return false;
      if (Input != other.Input) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VmType != 0) hash ^= VmType.GetHashCode();
      if (Input.Length != 0) hash ^= Input.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (VmType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) VmType);
      }
      if (Input.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Input);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VmType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VmType);
      }
      if (Input.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Input);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CallTx other) {
      if (other == null) {
        return;
      }
      if (other.VmType != 0) {
        VmType = other.VmType;
      }
      if (other.Input.Length != 0) {
        Input = other.Input;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            vmType_ = (global::Loom.Client.Internal.Protobuf.VMType) input.ReadEnum();
            break;
          }
          case 18: {
            Input = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class PluginCode : pb::IMessage<PluginCode> {
    private static readonly pb::MessageParser<PluginCode> _parser = new pb::MessageParser<PluginCode>(() => new PluginCode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PluginCode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.LoomReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginCode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginCode(PluginCode other) : this() {
      name_ = other.name_;
      input_ = other.input_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginCode Clone() {
      return new PluginCode(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 2;
    private pb::ByteString input_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Input {
      get { return input_; }
      set {
        input_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PluginCode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PluginCode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Input != other.Input) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Input.Length != 0) hash ^= Input.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Input.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Input);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Input.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Input);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PluginCode other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Input.Length != 0) {
        Input = other.Input;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Input = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.LoomReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      contentType_ = other.contentType_;
      accept_ = other.accept_;
      body_ = other.body_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 1;
    private global::Loom.Client.Internal.Protobuf.EncodingType contentType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.EncodingType ContentType {
      get { return contentType_; }
      set {
        contentType_ = value;
      }
    }

    /// <summary>Field number for the "accept" field.</summary>
    public const int AcceptFieldNumber = 2;
    private global::Loom.Client.Internal.Protobuf.EncodingType accept_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.EncodingType Accept {
      get { return accept_; }
      set {
        accept_ = value;
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 3;
    private pb::ByteString body_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContentType != other.ContentType) return false;
      if (Accept != other.Accept) return false;
      if (Body != other.Body) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContentType != 0) hash ^= ContentType.GetHashCode();
      if (Accept != 0) hash ^= Accept.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContentType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ContentType);
      }
      if (Accept != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Accept);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContentType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ContentType);
      }
      if (Accept != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Accept);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      if (other.ContentType != 0) {
        ContentType = other.ContentType;
      }
      if (other.Accept != 0) {
        Accept = other.Accept;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            contentType_ = (global::Loom.Client.Internal.Protobuf.EncodingType) input.ReadEnum();
            break;
          }
          case 16: {
            accept_ = (global::Loom.Client.Internal.Protobuf.EncodingType) input.ReadEnum();
            break;
          }
          case 26: {
            Body = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.LoomReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      contentType_ = other.contentType_;
      body_ = other.body_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 1;
    private global::Loom.Client.Internal.Protobuf.EncodingType contentType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.EncodingType ContentType {
      get { return contentType_; }
      set {
        contentType_ = value;
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 2;
    private pb::ByteString body_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContentType != other.ContentType) return false;
      if (Body != other.Body) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContentType != 0) hash ^= ContentType.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContentType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ContentType);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContentType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ContentType);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.ContentType != 0) {
        ContentType = other.ContentType;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            contentType_ = (global::Loom.Client.Internal.Protobuf.EncodingType) input.ReadEnum();
            break;
          }
          case 18: {
            Body = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ContractMethodCall : pb::IMessage<ContractMethodCall> {
    private static readonly pb::MessageParser<ContractMethodCall> _parser = new pb::MessageParser<ContractMethodCall>(() => new ContractMethodCall());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractMethodCall> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.LoomReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractMethodCall() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractMethodCall(ContractMethodCall other) : this() {
      method_ = other.method_;
      args_ = other.args_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractMethodCall Clone() {
      return new ContractMethodCall(this);
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 1;
    private string method_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Method {
      get { return method_; }
      set {
        method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 2;
    private pb::ByteString args_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Args {
      get { return args_; }
      set {
        args_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractMethodCall);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractMethodCall other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Method != other.Method) return false;
      if (Args != other.Args) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Method.Length != 0) hash ^= Method.GetHashCode();
      if (Args.Length != 0) hash ^= Args.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Method.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Method);
      }
      if (Args.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Args);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Method.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
      }
      if (Args.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Args);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractMethodCall other) {
      if (other == null) {
        return;
      }
      if (other.Method.Length != 0) {
        Method = other.Method;
      }
      if (other.Args.Length != 0) {
        Args = other.Args;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Method = input.ReadString();
            break;
          }
          case 18: {
            Args = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class TxHashList : pb::IMessage<TxHashList> {
    private static readonly pb::MessageParser<TxHashList> _parser = new pb::MessageParser<TxHashList>(() => new TxHashList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TxHashList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.LoomReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxHashList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxHashList(TxHashList other) : this() {
      txHash_ = other.txHash_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxHashList Clone() {
      return new TxHashList(this);
    }

    /// <summary>Field number for the "tx_hash" field.</summary>
    public const int TxHashFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_txHash_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> txHash_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> TxHash {
      get { return txHash_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TxHashList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TxHashList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!txHash_.Equals(other.txHash_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= txHash_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      txHash_.WriteTo(output, _repeated_txHash_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += txHash_.CalculateSize(_repeated_txHash_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TxHashList other) {
      if (other == null) {
        return;
      }
      txHash_.Add(other.txHash_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            txHash_.AddEntriesFrom(input, _repeated_txHash_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class EventDataList : pb::IMessage<EventDataList> {
    private static readonly pb::MessageParser<EventDataList> _parser = new pb::MessageParser<EventDataList>(() => new EventDataList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventDataList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.LoomReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDataList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDataList(EventDataList other) : this() {
      events_ = other.events_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDataList Clone() {
      return new EventDataList(this);
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Loom.Client.Internal.Protobuf.EventData> _repeated_events_codec
        = pb::FieldCodec.ForMessage(10, global::Loom.Client.Internal.Protobuf.EventData.Parser);
    private readonly pbc::RepeatedField<global::Loom.Client.Internal.Protobuf.EventData> events_ = new pbc::RepeatedField<global::Loom.Client.Internal.Protobuf.EventData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Loom.Client.Internal.Protobuf.EventData> Events {
      get { return events_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventDataList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventDataList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!events_.Equals(other.events_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= events_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      events_.WriteTo(output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += events_.CalculateSize(_repeated_events_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventDataList other) {
      if (other == null) {
        return;
      }
      events_.Add(other.events_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class EventData : pb::IMessage<EventData> {
    private static readonly pb::MessageParser<EventData> _parser = new pb::MessageParser<EventData>(() => new EventData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.LoomReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventData(EventData other) : this() {
      topics_ = other.topics_.Clone();
      Caller = other.caller_ != null ? other.Caller.Clone() : null;
      Address = other.address_ != null ? other.Address.Clone() : null;
      pluginName_ = other.pluginName_;
      blockHeight_ = other.blockHeight_;
      encodedBody_ = other.encodedBody_;
      originalRequest_ = other.originalRequest_;
      txHash_ = other.txHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventData Clone() {
      return new EventData(this);
    }

    /// <summary>Field number for the "topics" field.</summary>
    public const int TopicsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_topics_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> topics_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Topics {
      get { return topics_; }
    }

    /// <summary>Field number for the "caller" field.</summary>
    public const int CallerFieldNumber = 2;
    private global::Loom.Client.Internal.Protobuf.Address caller_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.Address Caller {
      get { return caller_; }
      set {
        caller_ = value;
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 3;
    private global::Loom.Client.Internal.Protobuf.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "plugin_name" field.</summary>
    public const int PluginNameFieldNumber = 4;
    private string pluginName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PluginName {
      get { return pluginName_; }
      set {
        pluginName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "block_height" field.</summary>
    public const int BlockHeightFieldNumber = 5;
    private ulong blockHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BlockHeight {
      get { return blockHeight_; }
      set {
        blockHeight_ = value;
      }
    }

    /// <summary>Field number for the "encoded_body" field.</summary>
    public const int EncodedBodyFieldNumber = 6;
    private pb::ByteString encodedBody_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString EncodedBody {
      get { return encodedBody_; }
      set {
        encodedBody_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "original_request" field.</summary>
    public const int OriginalRequestFieldNumber = 7;
    private pb::ByteString originalRequest_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OriginalRequest {
      get { return originalRequest_; }
      set {
        originalRequest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tx_hash" field.</summary>
    public const int TxHashFieldNumber = 8;
    private pb::ByteString txHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TxHash {
      get { return txHash_; }
      set {
        txHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!topics_.Equals(other.topics_)) return false;
      if (!object.Equals(Caller, other.Caller)) return false;
      if (!object.Equals(Address, other.Address)) return false;
      if (PluginName != other.PluginName) return false;
      if (BlockHeight != other.BlockHeight) return false;
      if (EncodedBody != other.EncodedBody) return false;
      if (OriginalRequest != other.OriginalRequest) return false;
      if (TxHash != other.TxHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= topics_.GetHashCode();
      if (caller_ != null) hash ^= Caller.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (PluginName.Length != 0) hash ^= PluginName.GetHashCode();
      if (BlockHeight != 0UL) hash ^= BlockHeight.GetHashCode();
      if (EncodedBody.Length != 0) hash ^= EncodedBody.GetHashCode();
      if (OriginalRequest.Length != 0) hash ^= OriginalRequest.GetHashCode();
      if (TxHash.Length != 0) hash ^= TxHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      topics_.WriteTo(output, _repeated_topics_codec);
      if (caller_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Caller);
      }
      if (address_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Address);
      }
      if (PluginName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PluginName);
      }
      if (BlockHeight != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(BlockHeight);
      }
      if (EncodedBody.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(EncodedBody);
      }
      if (OriginalRequest.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(OriginalRequest);
      }
      if (TxHash.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(TxHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += topics_.CalculateSize(_repeated_topics_codec);
      if (caller_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Caller);
      }
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (PluginName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PluginName);
      }
      if (BlockHeight != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BlockHeight);
      }
      if (EncodedBody.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EncodedBody);
      }
      if (OriginalRequest.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OriginalRequest);
      }
      if (TxHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TxHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventData other) {
      if (other == null) {
        return;
      }
      topics_.Add(other.topics_);
      if (other.caller_ != null) {
        if (caller_ == null) {
          caller_ = new global::Loom.Client.Internal.Protobuf.Address();
        }
        Caller.MergeFrom(other.Caller);
      }
      if (other.address_ != null) {
        if (address_ == null) {
          address_ = new global::Loom.Client.Internal.Protobuf.Address();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.PluginName.Length != 0) {
        PluginName = other.PluginName;
      }
      if (other.BlockHeight != 0UL) {
        BlockHeight = other.BlockHeight;
      }
      if (other.EncodedBody.Length != 0) {
        EncodedBody = other.EncodedBody;
      }
      if (other.OriginalRequest.Length != 0) {
        OriginalRequest = other.OriginalRequest;
      }
      if (other.TxHash.Length != 0) {
        TxHash = other.TxHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            topics_.AddEntriesFrom(input, _repeated_topics_codec);
            break;
          }
          case 18: {
            if (caller_ == null) {
              caller_ = new global::Loom.Client.Internal.Protobuf.Address();
            }
            input.ReadMessage(caller_);
            break;
          }
          case 26: {
            if (address_ == null) {
              address_ = new global::Loom.Client.Internal.Protobuf.Address();
            }
            input.ReadMessage(address_);
            break;
          }
          case 34: {
            PluginName = input.ReadString();
            break;
          }
          case 40: {
            BlockHeight = input.ReadUInt64();
            break;
          }
          case 50: {
            EncodedBody = input.ReadBytes();
            break;
          }
          case 58: {
            OriginalRequest = input.ReadBytes();
            break;
          }
          case 66: {
            TxHash = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class TxReceiptList : pb::IMessage<TxReceiptList> {
    private static readonly pb::MessageParser<TxReceiptList> _parser = new pb::MessageParser<TxReceiptList>(() => new TxReceiptList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TxReceiptList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.LoomReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxReceiptList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxReceiptList(TxReceiptList other) : this() {
      txReceipts_ = other.txReceipts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxReceiptList Clone() {
      return new TxReceiptList(this);
    }

    /// <summary>Field number for the "tx_receipts" field.</summary>
    public const int TxReceiptsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Loom.Client.Internal.Protobuf.EvmTxReceipt> _repeated_txReceipts_codec
        = pb::FieldCodec.ForMessage(10, global::Loom.Client.Internal.Protobuf.EvmTxReceipt.Parser);
    private readonly pbc::RepeatedField<global::Loom.Client.Internal.Protobuf.EvmTxReceipt> txReceipts_ = new pbc::RepeatedField<global::Loom.Client.Internal.Protobuf.EvmTxReceipt>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Loom.Client.Internal.Protobuf.EvmTxReceipt> TxReceipts {
      get { return txReceipts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TxReceiptList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TxReceiptList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!txReceipts_.Equals(other.txReceipts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= txReceipts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      txReceipts_.WriteTo(output, _repeated_txReceipts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += txReceipts_.CalculateSize(_repeated_txReceipts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TxReceiptList other) {
      if (other == null) {
        return;
      }
      txReceipts_.Add(other.txReceipts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            txReceipts_.AddEntriesFrom(input, _repeated_txReceipts_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class EvmTxReceipt : pb::IMessage<EvmTxReceipt> {
    private static readonly pb::MessageParser<EvmTxReceipt> _parser = new pb::MessageParser<EvmTxReceipt>(() => new EvmTxReceipt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EvmTxReceipt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.LoomReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EvmTxReceipt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EvmTxReceipt(EvmTxReceipt other) : this() {
      transactionIndex_ = other.transactionIndex_;
      blockHash_ = other.blockHash_;
      blockNumber_ = other.blockNumber_;
      cumulativeGasUsed_ = other.cumulativeGasUsed_;
      gasUsed_ = other.gasUsed_;
      contractAddress_ = other.contractAddress_;
      logs_ = other.logs_.Clone();
      logsBloom_ = other.logsBloom_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EvmTxReceipt Clone() {
      return new EvmTxReceipt(this);
    }

    /// <summary>Field number for the "transaction_index" field.</summary>
    public const int TransactionIndexFieldNumber = 1;
    private int transactionIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TransactionIndex {
      get { return transactionIndex_; }
      set {
        transactionIndex_ = value;
      }
    }

    /// <summary>Field number for the "block_hash" field.</summary>
    public const int BlockHashFieldNumber = 2;
    private pb::ByteString blockHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BlockHash {
      get { return blockHash_; }
      set {
        blockHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "block_number" field.</summary>
    public const int BlockNumberFieldNumber = 3;
    private long blockNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BlockNumber {
      get { return blockNumber_; }
      set {
        blockNumber_ = value;
      }
    }

    /// <summary>Field number for the "cumulative_gas_used" field.</summary>
    public const int CumulativeGasUsedFieldNumber = 4;
    private int cumulativeGasUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CumulativeGasUsed {
      get { return cumulativeGasUsed_; }
      set {
        cumulativeGasUsed_ = value;
      }
    }

    /// <summary>Field number for the "gas_used" field.</summary>
    public const int GasUsedFieldNumber = 5;
    private int gasUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GasUsed {
      get { return gasUsed_; }
      set {
        gasUsed_ = value;
      }
    }

    /// <summary>Field number for the "contract_address" field.</summary>
    public const int ContractAddressFieldNumber = 6;
    private pb::ByteString contractAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ContractAddress {
      get { return contractAddress_; }
      set {
        contractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "logs" field.</summary>
    public const int LogsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Loom.Client.Internal.Protobuf.EventData> _repeated_logs_codec
        = pb::FieldCodec.ForMessage(58, global::Loom.Client.Internal.Protobuf.EventData.Parser);
    private readonly pbc::RepeatedField<global::Loom.Client.Internal.Protobuf.EventData> logs_ = new pbc::RepeatedField<global::Loom.Client.Internal.Protobuf.EventData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Loom.Client.Internal.Protobuf.EventData> Logs {
      get { return logs_; }
    }

    /// <summary>Field number for the "logs_bloom" field.</summary>
    public const int LogsBloomFieldNumber = 8;
    private pb::ByteString logsBloom_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString LogsBloom {
      get { return logsBloom_; }
      set {
        logsBloom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 9;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EvmTxReceipt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EvmTxReceipt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionIndex != other.TransactionIndex) return false;
      if (BlockHash != other.BlockHash) return false;
      if (BlockNumber != other.BlockNumber) return false;
      if (CumulativeGasUsed != other.CumulativeGasUsed) return false;
      if (GasUsed != other.GasUsed) return false;
      if (ContractAddress != other.ContractAddress) return false;
      if(!logs_.Equals(other.logs_)) return false;
      if (LogsBloom != other.LogsBloom) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransactionIndex != 0) hash ^= TransactionIndex.GetHashCode();
      if (BlockHash.Length != 0) hash ^= BlockHash.GetHashCode();
      if (BlockNumber != 0L) hash ^= BlockNumber.GetHashCode();
      if (CumulativeGasUsed != 0) hash ^= CumulativeGasUsed.GetHashCode();
      if (GasUsed != 0) hash ^= GasUsed.GetHashCode();
      if (ContractAddress.Length != 0) hash ^= ContractAddress.GetHashCode();
      hash ^= logs_.GetHashCode();
      if (LogsBloom.Length != 0) hash ^= LogsBloom.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransactionIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TransactionIndex);
      }
      if (BlockHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(BlockHash);
      }
      if (BlockNumber != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(BlockNumber);
      }
      if (CumulativeGasUsed != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CumulativeGasUsed);
      }
      if (GasUsed != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(GasUsed);
      }
      if (ContractAddress.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(ContractAddress);
      }
      logs_.WriteTo(output, _repeated_logs_codec);
      if (LogsBloom.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(LogsBloom);
      }
      if (Status != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransactionIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TransactionIndex);
      }
      if (BlockHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BlockHash);
      }
      if (BlockNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BlockNumber);
      }
      if (CumulativeGasUsed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CumulativeGasUsed);
      }
      if (GasUsed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GasUsed);
      }
      if (ContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ContractAddress);
      }
      size += logs_.CalculateSize(_repeated_logs_codec);
      if (LogsBloom.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(LogsBloom);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EvmTxReceipt other) {
      if (other == null) {
        return;
      }
      if (other.TransactionIndex != 0) {
        TransactionIndex = other.TransactionIndex;
      }
      if (other.BlockHash.Length != 0) {
        BlockHash = other.BlockHash;
      }
      if (other.BlockNumber != 0L) {
        BlockNumber = other.BlockNumber;
      }
      if (other.CumulativeGasUsed != 0) {
        CumulativeGasUsed = other.CumulativeGasUsed;
      }
      if (other.GasUsed != 0) {
        GasUsed = other.GasUsed;
      }
      if (other.ContractAddress.Length != 0) {
        ContractAddress = other.ContractAddress;
      }
      logs_.Add(other.logs_);
      if (other.LogsBloom.Length != 0) {
        LogsBloom = other.LogsBloom;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TransactionIndex = input.ReadInt32();
            break;
          }
          case 18: {
            BlockHash = input.ReadBytes();
            break;
          }
          case 24: {
            BlockNumber = input.ReadInt64();
            break;
          }
          case 32: {
            CumulativeGasUsed = input.ReadInt32();
            break;
          }
          case 40: {
            GasUsed = input.ReadInt32();
            break;
          }
          case 50: {
            ContractAddress = input.ReadBytes();
            break;
          }
          case 58: {
            logs_.AddEntriesFrom(input, _repeated_logs_codec);
            break;
          }
          case 66: {
            LogsBloom = input.ReadBytes();
            break;
          }
          case 72: {
            Status = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
