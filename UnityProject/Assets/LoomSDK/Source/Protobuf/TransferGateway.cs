// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/transfer_gateway.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Loom.Google.Protobuf;
using pbc = global::Loom.Google.Protobuf.Collections;
using pbr = global::Loom.Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Loom.Client.Internal.Protobuf {

  /// <summary>Holder for reflection information generated from proto/transfer_gateway.proto</summary>
  internal static partial class TransferGatewayReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/transfer_gateway.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TransferGatewayReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chxwcm90by90cmFuc2Zlcl9nYXRld2F5LnByb3RvGhBwcm90by9sb29tLnBy",
            "b3RvIm8KJ1RyYW5zZmVyR2F0ZXdheUNvbnRyYWN0TWFwcGluZ0NvbmZpcm1l",
            "ZBIiChBmb3JlaWduX2NvbnRyYWN0GAEgASgLMgguQWRkcmVzcxIgCg5sb2Nh",
            "bF9jb250cmFjdBgCIAEoCzIILkFkZHJlc3MivAEKJFRyYW5zZmVyR2F0ZXdh",
            "eVRva2VuV2l0aGRyYXdhbFNpZ25lZBIdCgt0b2tlbl9vd25lchgBIAEoCzII",
            "LkFkZHJlc3MSIAoOdG9rZW5fY29udHJhY3QYAiABKAsyCC5BZGRyZXNzEi0K",
            "CnRva2VuX2tpbmQYAyABKA4yGS5UcmFuc2ZlckdhdGV3YXlUb2tlbktpbmQS",
            "FwoFdmFsdWUYBCABKAsyCC5CaWdVSW50EgsKA3NpZxgFIAEoDCLjAQogVHJh",
            "bnNmZXJHYXRld2F5V2l0aGRyYXdhbFJlY2VpcHQSHQoLdG9rZW5fb3duZXIY",
            "ASABKAsyCC5BZGRyZXNzEiAKDnRva2VuX2NvbnRyYWN0GAIgASgLMgguQWRk",
            "cmVzcxItCgp0b2tlbl9raW5kGAMgASgOMhkuVHJhbnNmZXJHYXRld2F5VG9r",
            "ZW5LaW5kEhcKBXZhbHVlGAQgASgLMgguQmlnVUludBIcChB3aXRoZHJhd2Fs",
            "X25vbmNlGAUgASgEQgIwARIYChBvcmFjbGVfc2lnbmF0dXJlGAYgASgMImQK",
            "JFRyYW5zZmVyR2F0ZXdheVdpdGhkcmF3RVJDNzIxUmVxdWVzdBIaCgh0b2tl",
            "bl9pZBgBIAEoCzIILkJpZ1VJbnQSIAoOdG9rZW5fY29udHJhY3QYAiABKAsy",
            "CC5BZGRyZXNzIkIKJ1RyYW5zZmVyR2F0ZXdheVdpdGhkcmF3YWxSZWNlaXB0",
            "UmVxdWVzdBIXCgVvd25lchgBIAEoCzIILkFkZHJlc3MiXgooVHJhbnNmZXJH",
            "YXRld2F5V2l0aGRyYXdhbFJlY2VpcHRSZXNwb25zZRIyCgdyZWNlaXB0GAEg",
            "ASgLMiEuVHJhbnNmZXJHYXRld2F5V2l0aGRyYXdhbFJlY2VpcHQiggEKLlRy",
            "YW5zZmVyR2F0ZXdheUNvbmZpcm1XaXRoZHJhd2FsUmVjZWlwdFJlcXVlc3QS",
            "HQoLdG9rZW5fb3duZXIYASABKAsyCC5BZGRyZXNzEhgKEG9yYWNsZV9zaWdu",
            "YXR1cmUYAiABKAwSFwoPd2l0aGRyYXdhbF9oYXNoGAMgASgMIrgBCihUcmFu",
            "c2ZlckdhdGV3YXlBZGRDb250cmFjdE1hcHBpbmdSZXF1ZXN0EiIKEGZvcmVp",
            "Z25fY29udHJhY3QYASABKAsyCC5BZGRyZXNzEiAKDmxvY2FsX2NvbnRyYWN0",
            "GAIgASgLMgguQWRkcmVzcxIkChxmb3JlaWduX2NvbnRyYWN0X2NyZWF0b3Jf",
            "c2lnGAMgASgMEiAKGGZvcmVpZ25fY29udHJhY3RfdHhfaGFzaBgEIAEoDCo6",
            "ChhUcmFuc2ZlckdhdGV3YXlUb2tlbktpbmQSBwoDRVRIEAASCQoFRVJDMjAQ",
            "ARIKCgZFUkM3MjEQAkIgqgIdTG9vbS5DbGllbnQuSW50ZXJuYWwuUHJvdG9i",
            "dWZiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Loom.Client.Internal.Protobuf.LoomReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Loom.Client.Internal.Protobuf.TransferGatewayTokenKind), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.TransferGatewayContractMappingConfirmed), global::Loom.Client.Internal.Protobuf.TransferGatewayContractMappingConfirmed.Parser, new[]{ "ForeignContract", "LocalContract" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.TransferGatewayTokenWithdrawalSigned), global::Loom.Client.Internal.Protobuf.TransferGatewayTokenWithdrawalSigned.Parser, new[]{ "TokenOwner", "TokenContract", "TokenKind", "Value", "Sig" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.TransferGatewayWithdrawalReceipt), global::Loom.Client.Internal.Protobuf.TransferGatewayWithdrawalReceipt.Parser, new[]{ "TokenOwner", "TokenContract", "TokenKind", "Value", "WithdrawalNonce", "OracleSignature" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.TransferGatewayWithdrawERC721Request), global::Loom.Client.Internal.Protobuf.TransferGatewayWithdrawERC721Request.Parser, new[]{ "TokenId", "TokenContract" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.TransferGatewayWithdrawalReceiptRequest), global::Loom.Client.Internal.Protobuf.TransferGatewayWithdrawalReceiptRequest.Parser, new[]{ "Owner" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.TransferGatewayWithdrawalReceiptResponse), global::Loom.Client.Internal.Protobuf.TransferGatewayWithdrawalReceiptResponse.Parser, new[]{ "Receipt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.TransferGatewayConfirmWithdrawalReceiptRequest), global::Loom.Client.Internal.Protobuf.TransferGatewayConfirmWithdrawalReceiptRequest.Parser, new[]{ "TokenOwner", "OracleSignature", "WithdrawalHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.Client.Internal.Protobuf.TransferGatewayAddContractMappingRequest), global::Loom.Client.Internal.Protobuf.TransferGatewayAddContractMappingRequest.Parser, new[]{ "ForeignContract", "LocalContract", "ForeignContractCreatorSig", "ForeignContractTxHash" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  internal enum TransferGatewayTokenKind {
    [pbr::OriginalName("ETH")] Eth = 0,
    [pbr::OriginalName("ERC20")] Erc20 = 1,
    [pbr::OriginalName("ERC721")] Erc721 = 2,
  }

  #endregion

  #region Messages
  internal sealed partial class TransferGatewayContractMappingConfirmed : pb::IMessage<TransferGatewayContractMappingConfirmed> {
    private static readonly pb::MessageParser<TransferGatewayContractMappingConfirmed> _parser = new pb::MessageParser<TransferGatewayContractMappingConfirmed>(() => new TransferGatewayContractMappingConfirmed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferGatewayContractMappingConfirmed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.TransferGatewayReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayContractMappingConfirmed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayContractMappingConfirmed(TransferGatewayContractMappingConfirmed other) : this() {
      foreignContract_ = other.foreignContract_ != null ? other.foreignContract_.Clone() : null;
      localContract_ = other.localContract_ != null ? other.localContract_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayContractMappingConfirmed Clone() {
      return new TransferGatewayContractMappingConfirmed(this);
    }

    /// <summary>Field number for the "foreign_contract" field.</summary>
    public const int ForeignContractFieldNumber = 1;
    private global::Loom.Client.Internal.Protobuf.Address foreignContract_;
    /// <summary>
    /// Address of a contract on a foreign blockchain
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.Address ForeignContract {
      get { return foreignContract_; }
      set {
        foreignContract_ = value;
      }
    }

    /// <summary>Field number for the "local_contract" field.</summary>
    public const int LocalContractFieldNumber = 2;
    private global::Loom.Client.Internal.Protobuf.Address localContract_;
    /// <summary>
    /// Address of corresponding contract on the local blockchain
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.Address LocalContract {
      get { return localContract_; }
      set {
        localContract_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferGatewayContractMappingConfirmed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferGatewayContractMappingConfirmed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ForeignContract, other.ForeignContract)) return false;
      if (!object.Equals(LocalContract, other.LocalContract)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (foreignContract_ != null) hash ^= ForeignContract.GetHashCode();
      if (localContract_ != null) hash ^= LocalContract.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (foreignContract_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ForeignContract);
      }
      if (localContract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LocalContract);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (foreignContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ForeignContract);
      }
      if (localContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalContract);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferGatewayContractMappingConfirmed other) {
      if (other == null) {
        return;
      }
      if (other.foreignContract_ != null) {
        if (foreignContract_ == null) {
          foreignContract_ = new global::Loom.Client.Internal.Protobuf.Address();
        }
        ForeignContract.MergeFrom(other.ForeignContract);
      }
      if (other.localContract_ != null) {
        if (localContract_ == null) {
          localContract_ = new global::Loom.Client.Internal.Protobuf.Address();
        }
        LocalContract.MergeFrom(other.LocalContract);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (foreignContract_ == null) {
              foreignContract_ = new global::Loom.Client.Internal.Protobuf.Address();
            }
            input.ReadMessage(foreignContract_);
            break;
          }
          case 18: {
            if (localContract_ == null) {
              localContract_ = new global::Loom.Client.Internal.Protobuf.Address();
            }
            input.ReadMessage(localContract_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Emitted when a withdrawal to the Mainnet Gateway has been signed.
  /// This event contains all the required data to complete a toke withdrawal via the Mainnet Gateway.
  /// </summary>
  internal sealed partial class TransferGatewayTokenWithdrawalSigned : pb::IMessage<TransferGatewayTokenWithdrawalSigned> {
    private static readonly pb::MessageParser<TransferGatewayTokenWithdrawalSigned> _parser = new pb::MessageParser<TransferGatewayTokenWithdrawalSigned>(() => new TransferGatewayTokenWithdrawalSigned());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferGatewayTokenWithdrawalSigned> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.TransferGatewayReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayTokenWithdrawalSigned() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayTokenWithdrawalSigned(TransferGatewayTokenWithdrawalSigned other) : this() {
      tokenOwner_ = other.tokenOwner_ != null ? other.tokenOwner_.Clone() : null;
      tokenContract_ = other.tokenContract_ != null ? other.tokenContract_.Clone() : null;
      tokenKind_ = other.tokenKind_;
      value_ = other.value_ != null ? other.value_.Clone() : null;
      sig_ = other.sig_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayTokenWithdrawalSigned Clone() {
      return new TransferGatewayTokenWithdrawalSigned(this);
    }

    /// <summary>Field number for the "token_owner" field.</summary>
    public const int TokenOwnerFieldNumber = 1;
    private global::Loom.Client.Internal.Protobuf.Address tokenOwner_;
    /// <summary>
    /// Mainnet address of token owner
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.Address TokenOwner {
      get { return tokenOwner_; }
      set {
        tokenOwner_ = value;
      }
    }

    /// <summary>Field number for the "token_contract" field.</summary>
    public const int TokenContractFieldNumber = 2;
    private global::Loom.Client.Internal.Protobuf.Address tokenContract_;
    /// <summary>
    /// Mainnet address of token contract, blank if ETH
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.Address TokenContract {
      get { return tokenContract_; }
      set {
        tokenContract_ = value;
      }
    }

    /// <summary>Field number for the "token_kind" field.</summary>
    public const int TokenKindFieldNumber = 3;
    private global::Loom.Client.Internal.Protobuf.TransferGatewayTokenKind tokenKind_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.TransferGatewayTokenKind TokenKind {
      get { return tokenKind_; }
      set {
        tokenKind_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 4;
    private global::Loom.Client.Internal.Protobuf.BigUInt value_;
    /// <summary>
    /// ERC721 token ID, or amount of ERC20/ETH
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.BigUInt Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "sig" field.</summary>
    public const int SigFieldNumber = 5;
    private pb::ByteString sig_ = pb::ByteString.Empty;
    /// <summary>
    /// Oracle signature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Sig {
      get { return sig_; }
      set {
        sig_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferGatewayTokenWithdrawalSigned);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferGatewayTokenWithdrawalSigned other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TokenOwner, other.TokenOwner)) return false;
      if (!object.Equals(TokenContract, other.TokenContract)) return false;
      if (TokenKind != other.TokenKind) return false;
      if (!object.Equals(Value, other.Value)) return false;
      if (Sig != other.Sig) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tokenOwner_ != null) hash ^= TokenOwner.GetHashCode();
      if (tokenContract_ != null) hash ^= TokenContract.GetHashCode();
      if (TokenKind != 0) hash ^= TokenKind.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (Sig.Length != 0) hash ^= Sig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (tokenOwner_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TokenOwner);
      }
      if (tokenContract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TokenContract);
      }
      if (TokenKind != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) TokenKind);
      }
      if (value_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Value);
      }
      if (Sig.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Sig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tokenOwner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenOwner);
      }
      if (tokenContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenContract);
      }
      if (TokenKind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TokenKind);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (Sig.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Sig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferGatewayTokenWithdrawalSigned other) {
      if (other == null) {
        return;
      }
      if (other.tokenOwner_ != null) {
        if (tokenOwner_ == null) {
          tokenOwner_ = new global::Loom.Client.Internal.Protobuf.Address();
        }
        TokenOwner.MergeFrom(other.TokenOwner);
      }
      if (other.tokenContract_ != null) {
        if (tokenContract_ == null) {
          tokenContract_ = new global::Loom.Client.Internal.Protobuf.Address();
        }
        TokenContract.MergeFrom(other.TokenContract);
      }
      if (other.TokenKind != 0) {
        TokenKind = other.TokenKind;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          value_ = new global::Loom.Client.Internal.Protobuf.BigUInt();
        }
        Value.MergeFrom(other.Value);
      }
      if (other.Sig.Length != 0) {
        Sig = other.Sig;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tokenOwner_ == null) {
              tokenOwner_ = new global::Loom.Client.Internal.Protobuf.Address();
            }
            input.ReadMessage(tokenOwner_);
            break;
          }
          case 18: {
            if (tokenContract_ == null) {
              tokenContract_ = new global::Loom.Client.Internal.Protobuf.Address();
            }
            input.ReadMessage(tokenContract_);
            break;
          }
          case 24: {
            tokenKind_ = (global::Loom.Client.Internal.Protobuf.TransferGatewayTokenKind) input.ReadEnum();
            break;
          }
          case 34: {
            if (value_ == null) {
              value_ = new global::Loom.Client.Internal.Protobuf.BigUInt();
            }
            input.ReadMessage(value_);
            break;
          }
          case 42: {
            Sig = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class TransferGatewayWithdrawalReceipt : pb::IMessage<TransferGatewayWithdrawalReceipt> {
    private static readonly pb::MessageParser<TransferGatewayWithdrawalReceipt> _parser = new pb::MessageParser<TransferGatewayWithdrawalReceipt>(() => new TransferGatewayWithdrawalReceipt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferGatewayWithdrawalReceipt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.TransferGatewayReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayWithdrawalReceipt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayWithdrawalReceipt(TransferGatewayWithdrawalReceipt other) : this() {
      tokenOwner_ = other.tokenOwner_ != null ? other.tokenOwner_.Clone() : null;
      tokenContract_ = other.tokenContract_ != null ? other.tokenContract_.Clone() : null;
      tokenKind_ = other.tokenKind_;
      value_ = other.value_ != null ? other.value_.Clone() : null;
      withdrawalNonce_ = other.withdrawalNonce_;
      oracleSignature_ = other.oracleSignature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayWithdrawalReceipt Clone() {
      return new TransferGatewayWithdrawalReceipt(this);
    }

    /// <summary>Field number for the "token_owner" field.</summary>
    public const int TokenOwnerFieldNumber = 1;
    private global::Loom.Client.Internal.Protobuf.Address tokenOwner_;
    /// <summary>
    /// Mainnet address of token owner
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.Address TokenOwner {
      get { return tokenOwner_; }
      set {
        tokenOwner_ = value;
      }
    }

    /// <summary>Field number for the "token_contract" field.</summary>
    public const int TokenContractFieldNumber = 2;
    private global::Loom.Client.Internal.Protobuf.Address tokenContract_;
    /// <summary>
    /// Mainnet address of token contract
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.Address TokenContract {
      get { return tokenContract_; }
      set {
        tokenContract_ = value;
      }
    }

    /// <summary>Field number for the "token_kind" field.</summary>
    public const int TokenKindFieldNumber = 3;
    private global::Loom.Client.Internal.Protobuf.TransferGatewayTokenKind tokenKind_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.TransferGatewayTokenKind TokenKind {
      get { return tokenKind_; }
      set {
        tokenKind_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 4;
    private global::Loom.Client.Internal.Protobuf.BigUInt value_;
    /// <summary>
    /// // ERC721 token ID, or amount of ERC20/ETH
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.BigUInt Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "withdrawal_nonce" field.</summary>
    public const int WithdrawalNonceFieldNumber = 5;
    private ulong withdrawalNonce_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong WithdrawalNonce {
      get { return withdrawalNonce_; }
      set {
        withdrawalNonce_ = value;
      }
    }

    /// <summary>Field number for the "oracle_signature" field.</summary>
    public const int OracleSignatureFieldNumber = 6;
    private pb::ByteString oracleSignature_ = pb::ByteString.Empty;
    /// <summary>
    /// Signature generated by the Oracle that confirmed the withdrawal
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OracleSignature {
      get { return oracleSignature_; }
      set {
        oracleSignature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferGatewayWithdrawalReceipt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferGatewayWithdrawalReceipt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TokenOwner, other.TokenOwner)) return false;
      if (!object.Equals(TokenContract, other.TokenContract)) return false;
      if (TokenKind != other.TokenKind) return false;
      if (!object.Equals(Value, other.Value)) return false;
      if (WithdrawalNonce != other.WithdrawalNonce) return false;
      if (OracleSignature != other.OracleSignature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tokenOwner_ != null) hash ^= TokenOwner.GetHashCode();
      if (tokenContract_ != null) hash ^= TokenContract.GetHashCode();
      if (TokenKind != 0) hash ^= TokenKind.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (WithdrawalNonce != 0UL) hash ^= WithdrawalNonce.GetHashCode();
      if (OracleSignature.Length != 0) hash ^= OracleSignature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (tokenOwner_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TokenOwner);
      }
      if (tokenContract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TokenContract);
      }
      if (TokenKind != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) TokenKind);
      }
      if (value_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Value);
      }
      if (WithdrawalNonce != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(WithdrawalNonce);
      }
      if (OracleSignature.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(OracleSignature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tokenOwner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenOwner);
      }
      if (tokenContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenContract);
      }
      if (TokenKind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TokenKind);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (WithdrawalNonce != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(WithdrawalNonce);
      }
      if (OracleSignature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OracleSignature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferGatewayWithdrawalReceipt other) {
      if (other == null) {
        return;
      }
      if (other.tokenOwner_ != null) {
        if (tokenOwner_ == null) {
          tokenOwner_ = new global::Loom.Client.Internal.Protobuf.Address();
        }
        TokenOwner.MergeFrom(other.TokenOwner);
      }
      if (other.tokenContract_ != null) {
        if (tokenContract_ == null) {
          tokenContract_ = new global::Loom.Client.Internal.Protobuf.Address();
        }
        TokenContract.MergeFrom(other.TokenContract);
      }
      if (other.TokenKind != 0) {
        TokenKind = other.TokenKind;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          value_ = new global::Loom.Client.Internal.Protobuf.BigUInt();
        }
        Value.MergeFrom(other.Value);
      }
      if (other.WithdrawalNonce != 0UL) {
        WithdrawalNonce = other.WithdrawalNonce;
      }
      if (other.OracleSignature.Length != 0) {
        OracleSignature = other.OracleSignature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tokenOwner_ == null) {
              tokenOwner_ = new global::Loom.Client.Internal.Protobuf.Address();
            }
            input.ReadMessage(tokenOwner_);
            break;
          }
          case 18: {
            if (tokenContract_ == null) {
              tokenContract_ = new global::Loom.Client.Internal.Protobuf.Address();
            }
            input.ReadMessage(tokenContract_);
            break;
          }
          case 24: {
            tokenKind_ = (global::Loom.Client.Internal.Protobuf.TransferGatewayTokenKind) input.ReadEnum();
            break;
          }
          case 34: {
            if (value_ == null) {
              value_ = new global::Loom.Client.Internal.Protobuf.BigUInt();
            }
            input.ReadMessage(value_);
            break;
          }
          case 40: {
            WithdrawalNonce = input.ReadUInt64();
            break;
          }
          case 50: {
            OracleSignature = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class TransferGatewayWithdrawERC721Request : pb::IMessage<TransferGatewayWithdrawERC721Request> {
    private static readonly pb::MessageParser<TransferGatewayWithdrawERC721Request> _parser = new pb::MessageParser<TransferGatewayWithdrawERC721Request>(() => new TransferGatewayWithdrawERC721Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferGatewayWithdrawERC721Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.TransferGatewayReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayWithdrawERC721Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayWithdrawERC721Request(TransferGatewayWithdrawERC721Request other) : this() {
      tokenId_ = other.tokenId_ != null ? other.tokenId_.Clone() : null;
      tokenContract_ = other.tokenContract_ != null ? other.tokenContract_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayWithdrawERC721Request Clone() {
      return new TransferGatewayWithdrawERC721Request(this);
    }

    /// <summary>Field number for the "token_id" field.</summary>
    public const int TokenIdFieldNumber = 1;
    private global::Loom.Client.Internal.Protobuf.BigUInt tokenId_;
    /// <summary>
    /// ID of ERC721 token
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.BigUInt TokenId {
      get { return tokenId_; }
      set {
        tokenId_ = value;
      }
    }

    /// <summary>Field number for the "token_contract" field.</summary>
    public const int TokenContractFieldNumber = 2;
    private global::Loom.Client.Internal.Protobuf.Address tokenContract_;
    /// <summary>
    /// DAppChain address of ERC721 contract token belongs to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.Address TokenContract {
      get { return tokenContract_; }
      set {
        tokenContract_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferGatewayWithdrawERC721Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferGatewayWithdrawERC721Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TokenId, other.TokenId)) return false;
      if (!object.Equals(TokenContract, other.TokenContract)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tokenId_ != null) hash ^= TokenId.GetHashCode();
      if (tokenContract_ != null) hash ^= TokenContract.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (tokenId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TokenId);
      }
      if (tokenContract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TokenContract);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tokenId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenId);
      }
      if (tokenContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenContract);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferGatewayWithdrawERC721Request other) {
      if (other == null) {
        return;
      }
      if (other.tokenId_ != null) {
        if (tokenId_ == null) {
          tokenId_ = new global::Loom.Client.Internal.Protobuf.BigUInt();
        }
        TokenId.MergeFrom(other.TokenId);
      }
      if (other.tokenContract_ != null) {
        if (tokenContract_ == null) {
          tokenContract_ = new global::Loom.Client.Internal.Protobuf.Address();
        }
        TokenContract.MergeFrom(other.TokenContract);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tokenId_ == null) {
              tokenId_ = new global::Loom.Client.Internal.Protobuf.BigUInt();
            }
            input.ReadMessage(tokenId_);
            break;
          }
          case 18: {
            if (tokenContract_ == null) {
              tokenContract_ = new global::Loom.Client.Internal.Protobuf.Address();
            }
            input.ReadMessage(tokenContract_);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class TransferGatewayWithdrawalReceiptRequest : pb::IMessage<TransferGatewayWithdrawalReceiptRequest> {
    private static readonly pb::MessageParser<TransferGatewayWithdrawalReceiptRequest> _parser = new pb::MessageParser<TransferGatewayWithdrawalReceiptRequest>(() => new TransferGatewayWithdrawalReceiptRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferGatewayWithdrawalReceiptRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.TransferGatewayReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayWithdrawalReceiptRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayWithdrawalReceiptRequest(TransferGatewayWithdrawalReceiptRequest other) : this() {
      owner_ = other.owner_ != null ? other.owner_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayWithdrawalReceiptRequest Clone() {
      return new TransferGatewayWithdrawalReceiptRequest(this);
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 1;
    private global::Loom.Client.Internal.Protobuf.Address owner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.Address Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferGatewayWithdrawalReceiptRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferGatewayWithdrawalReceiptRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Owner, other.Owner)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (owner_ != null) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (owner_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (owner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferGatewayWithdrawalReceiptRequest other) {
      if (other == null) {
        return;
      }
      if (other.owner_ != null) {
        if (owner_ == null) {
          owner_ = new global::Loom.Client.Internal.Protobuf.Address();
        }
        Owner.MergeFrom(other.Owner);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (owner_ == null) {
              owner_ = new global::Loom.Client.Internal.Protobuf.Address();
            }
            input.ReadMessage(owner_);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class TransferGatewayWithdrawalReceiptResponse : pb::IMessage<TransferGatewayWithdrawalReceiptResponse> {
    private static readonly pb::MessageParser<TransferGatewayWithdrawalReceiptResponse> _parser = new pb::MessageParser<TransferGatewayWithdrawalReceiptResponse>(() => new TransferGatewayWithdrawalReceiptResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferGatewayWithdrawalReceiptResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.TransferGatewayReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayWithdrawalReceiptResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayWithdrawalReceiptResponse(TransferGatewayWithdrawalReceiptResponse other) : this() {
      receipt_ = other.receipt_ != null ? other.receipt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayWithdrawalReceiptResponse Clone() {
      return new TransferGatewayWithdrawalReceiptResponse(this);
    }

    /// <summary>Field number for the "receipt" field.</summary>
    public const int ReceiptFieldNumber = 1;
    private global::Loom.Client.Internal.Protobuf.TransferGatewayWithdrawalReceipt receipt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.TransferGatewayWithdrawalReceipt Receipt {
      get { return receipt_; }
      set {
        receipt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferGatewayWithdrawalReceiptResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferGatewayWithdrawalReceiptResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Receipt, other.Receipt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (receipt_ != null) hash ^= Receipt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (receipt_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Receipt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (receipt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Receipt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferGatewayWithdrawalReceiptResponse other) {
      if (other == null) {
        return;
      }
      if (other.receipt_ != null) {
        if (receipt_ == null) {
          receipt_ = new global::Loom.Client.Internal.Protobuf.TransferGatewayWithdrawalReceipt();
        }
        Receipt.MergeFrom(other.Receipt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (receipt_ == null) {
              receipt_ = new global::Loom.Client.Internal.Protobuf.TransferGatewayWithdrawalReceipt();
            }
            input.ReadMessage(receipt_);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class TransferGatewayConfirmWithdrawalReceiptRequest : pb::IMessage<TransferGatewayConfirmWithdrawalReceiptRequest> {
    private static readonly pb::MessageParser<TransferGatewayConfirmWithdrawalReceiptRequest> _parser = new pb::MessageParser<TransferGatewayConfirmWithdrawalReceiptRequest>(() => new TransferGatewayConfirmWithdrawalReceiptRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferGatewayConfirmWithdrawalReceiptRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.TransferGatewayReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayConfirmWithdrawalReceiptRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayConfirmWithdrawalReceiptRequest(TransferGatewayConfirmWithdrawalReceiptRequest other) : this() {
      tokenOwner_ = other.tokenOwner_ != null ? other.tokenOwner_.Clone() : null;
      oracleSignature_ = other.oracleSignature_;
      withdrawalHash_ = other.withdrawalHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayConfirmWithdrawalReceiptRequest Clone() {
      return new TransferGatewayConfirmWithdrawalReceiptRequest(this);
    }

    /// <summary>Field number for the "token_owner" field.</summary>
    public const int TokenOwnerFieldNumber = 1;
    private global::Loom.Client.Internal.Protobuf.Address tokenOwner_;
    /// <summary>
    /// DAppChain address of the entity attempting to make the withdrawal
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.Address TokenOwner {
      get { return tokenOwner_; }
      set {
        tokenOwner_ = value;
      }
    }

    /// <summary>Field number for the "oracle_signature" field.</summary>
    public const int OracleSignatureFieldNumber = 2;
    private pb::ByteString oracleSignature_ = pb::ByteString.Empty;
    /// <summary>
    /// 66-byte hash of the withdrawal hash
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OracleSignature {
      get { return oracleSignature_; }
      set {
        oracleSignature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "withdrawal_hash" field.</summary>
    public const int WithdrawalHashFieldNumber = 3;
    private pb::ByteString withdrawalHash_ = pb::ByteString.Empty;
    /// <summary>
    /// 32-byte hash of the withdrawal details
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString WithdrawalHash {
      get { return withdrawalHash_; }
      set {
        withdrawalHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferGatewayConfirmWithdrawalReceiptRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferGatewayConfirmWithdrawalReceiptRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TokenOwner, other.TokenOwner)) return false;
      if (OracleSignature != other.OracleSignature) return false;
      if (WithdrawalHash != other.WithdrawalHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tokenOwner_ != null) hash ^= TokenOwner.GetHashCode();
      if (OracleSignature.Length != 0) hash ^= OracleSignature.GetHashCode();
      if (WithdrawalHash.Length != 0) hash ^= WithdrawalHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (tokenOwner_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TokenOwner);
      }
      if (OracleSignature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(OracleSignature);
      }
      if (WithdrawalHash.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(WithdrawalHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tokenOwner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenOwner);
      }
      if (OracleSignature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OracleSignature);
      }
      if (WithdrawalHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(WithdrawalHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferGatewayConfirmWithdrawalReceiptRequest other) {
      if (other == null) {
        return;
      }
      if (other.tokenOwner_ != null) {
        if (tokenOwner_ == null) {
          tokenOwner_ = new global::Loom.Client.Internal.Protobuf.Address();
        }
        TokenOwner.MergeFrom(other.TokenOwner);
      }
      if (other.OracleSignature.Length != 0) {
        OracleSignature = other.OracleSignature;
      }
      if (other.WithdrawalHash.Length != 0) {
        WithdrawalHash = other.WithdrawalHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tokenOwner_ == null) {
              tokenOwner_ = new global::Loom.Client.Internal.Protobuf.Address();
            }
            input.ReadMessage(tokenOwner_);
            break;
          }
          case 18: {
            OracleSignature = input.ReadBytes();
            break;
          }
          case 26: {
            WithdrawalHash = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class TransferGatewayAddContractMappingRequest : pb::IMessage<TransferGatewayAddContractMappingRequest> {
    private static readonly pb::MessageParser<TransferGatewayAddContractMappingRequest> _parser = new pb::MessageParser<TransferGatewayAddContractMappingRequest>(() => new TransferGatewayAddContractMappingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferGatewayAddContractMappingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.Client.Internal.Protobuf.TransferGatewayReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayAddContractMappingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayAddContractMappingRequest(TransferGatewayAddContractMappingRequest other) : this() {
      foreignContract_ = other.foreignContract_ != null ? other.foreignContract_.Clone() : null;
      localContract_ = other.localContract_ != null ? other.localContract_.Clone() : null;
      foreignContractCreatorSig_ = other.foreignContractCreatorSig_;
      foreignContractTxHash_ = other.foreignContractTxHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferGatewayAddContractMappingRequest Clone() {
      return new TransferGatewayAddContractMappingRequest(this);
    }

    /// <summary>Field number for the "foreign_contract" field.</summary>
    public const int ForeignContractFieldNumber = 1;
    private global::Loom.Client.Internal.Protobuf.Address foreignContract_;
    /// <summary>
    /// Address on foreign blockchain
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.Address ForeignContract {
      get { return foreignContract_; }
      set {
        foreignContract_ = value;
      }
    }

    /// <summary>Field number for the "local_contract" field.</summary>
    public const int LocalContractFieldNumber = 2;
    private global::Loom.Client.Internal.Protobuf.Address localContract_;
    /// <summary>
    /// Corresponding address on local blockchain
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.Client.Internal.Protobuf.Address LocalContract {
      get { return localContract_; }
      set {
        localContract_ = value;
      }
    }

    /// <summary>Field number for the "foreign_contract_creator_sig" field.</summary>
    public const int ForeignContractCreatorSigFieldNumber = 3;
    private pb::ByteString foreignContractCreatorSig_ = pb::ByteString.Empty;
    /// <summary>
    /// Signature of the creator of the foreign contract
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ForeignContractCreatorSig {
      get { return foreignContractCreatorSig_; }
      set {
        foreignContractCreatorSig_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "foreign_contract_tx_hash" field.</summary>
    public const int ForeignContractTxHashFieldNumber = 4;
    private pb::ByteString foreignContractTxHash_ = pb::ByteString.Empty;
    /// <summary>
    /// Hash of the transaction which created the foreign contract
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ForeignContractTxHash {
      get { return foreignContractTxHash_; }
      set {
        foreignContractTxHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferGatewayAddContractMappingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferGatewayAddContractMappingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ForeignContract, other.ForeignContract)) return false;
      if (!object.Equals(LocalContract, other.LocalContract)) return false;
      if (ForeignContractCreatorSig != other.ForeignContractCreatorSig) return false;
      if (ForeignContractTxHash != other.ForeignContractTxHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (foreignContract_ != null) hash ^= ForeignContract.GetHashCode();
      if (localContract_ != null) hash ^= LocalContract.GetHashCode();
      if (ForeignContractCreatorSig.Length != 0) hash ^= ForeignContractCreatorSig.GetHashCode();
      if (ForeignContractTxHash.Length != 0) hash ^= ForeignContractTxHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (foreignContract_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ForeignContract);
      }
      if (localContract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LocalContract);
      }
      if (ForeignContractCreatorSig.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ForeignContractCreatorSig);
      }
      if (ForeignContractTxHash.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(ForeignContractTxHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (foreignContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ForeignContract);
      }
      if (localContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalContract);
      }
      if (ForeignContractCreatorSig.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ForeignContractCreatorSig);
      }
      if (ForeignContractTxHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ForeignContractTxHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferGatewayAddContractMappingRequest other) {
      if (other == null) {
        return;
      }
      if (other.foreignContract_ != null) {
        if (foreignContract_ == null) {
          foreignContract_ = new global::Loom.Client.Internal.Protobuf.Address();
        }
        ForeignContract.MergeFrom(other.ForeignContract);
      }
      if (other.localContract_ != null) {
        if (localContract_ == null) {
          localContract_ = new global::Loom.Client.Internal.Protobuf.Address();
        }
        LocalContract.MergeFrom(other.LocalContract);
      }
      if (other.ForeignContractCreatorSig.Length != 0) {
        ForeignContractCreatorSig = other.ForeignContractCreatorSig;
      }
      if (other.ForeignContractTxHash.Length != 0) {
        ForeignContractTxHash = other.ForeignContractTxHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (foreignContract_ == null) {
              foreignContract_ = new global::Loom.Client.Internal.Protobuf.Address();
            }
            input.ReadMessage(foreignContract_);
            break;
          }
          case 18: {
            if (localContract_ == null) {
              localContract_ = new global::Loom.Client.Internal.Protobuf.Address();
            }
            input.ReadMessage(localContract_);
            break;
          }
          case 26: {
            ForeignContractCreatorSig = input.ReadBytes();
            break;
          }
          case 34: {
            ForeignContractTxHash = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
